{"version":3,"sources":["services/api.js","services/authService.js","context/AuthContext.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","process","headers","interceptors","request","use","config","token","localStorage","getItem","concat","error","Promise","reject","response","async","status","console","data","setItem","window","location","pathname","errorMessage","message","includes","alert","removeItem","href","authService","login","email","password","post","JSON","stringify","user","register","userData","googleLogin","log","tokenId","getCurrentUser","get","logout","isAuthenticated","getUser","parse","isAdmin","role","AuthContext","createContext","currentUser","loading","loginWithGoogle","credential","resolve","AuthProvider","_ref","children","setCurrentUser","useState","setLoading","setError","setIsAuthenticated","useEffect","storedUser","jwtDecode","exp","Date","now","err","checkAuthStatus","value","result","_jsx","Provider","HomePage","navigate","useNavigate","searchQuery","setSearchQuery","useContext","_jsxs","className","type","placeholder","onChange","e","target","onClick","handleSearch","trim","picture","src","alt","name","handleLogout","handleCreateRecipe","SearchResultsPage","CreatePostPage","required","accept","min","RecipeDetailPage","id","useParams","ChatbotPage","UserProfilePage","AdminPage","LoginPageWrapper","setIsLoggedIn","GoogleLogin","onSuccess","credentialResponse","onError","handleGoogleError","useOneTap","theme","text","shape","App","isLoggedIn","setIsAdmin","GoogleOAuthProvider","clientId","BrowserRouter","Routes","Route","path","element","Navigate","to","rootElement","document","getElementById","createRoot","render","React","StrictMode","innerHTML"],"mappings":"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","file":"static/js/main.fa9aff3b.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// Tạo instance axios với cấu hình mặc định\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Thêm interceptors để xử lý token authentication\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Xử lý response và error global\napi.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    async (error) => {\n        // Nếu lỗi là 401 (Unauthorized), thử lại với token mới\n        if (error.response && error.response.status === 401) {\n            // Thông báo chi tiết hơn cho người dùng\n            console.error(\"Authentication error:\", error.response.data);\n            \n            // Lưu URL hiện tại trước khi chuyển hướng\n            localStorage.setItem('redirectAfterLogin', window.location.pathname);\n            \n            // Kiểm tra có phải là lỗi token hết hạn không\n            const errorMessage = error.response.data.message;\n            if (errorMessage.includes('hết hạn') || errorMessage.includes('không hợp lệ')) {\n                alert('Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.');\n                \n                // Xóa token cũ\n                localStorage.removeItem('auth_token');\n                localStorage.removeItem('user');\n                \n                // Điều hướng đến trang đăng nhập\n                window.location.href = '/login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Example API calls\nexport const fetchRecipes = async () => {\n    const response = await api.get('/recipes');\n    return response.data;\n};\n\nexport const fetchRecipeById = async (id) => {\n    const response = await api.get(`/recipes/${id}`);\n    return response.data;\n};\n\nexport const createRecipe = async (recipeData) => {\n    const response = await api.post('/recipes', recipeData);\n    return response.data;\n};\n\nexport const updateRecipe = async (id, recipeData) => {\n    const response = await api.put(`/recipes/${id}`, recipeData);\n    return response.data;\n};\n\nexport const deleteRecipe = async (id) => {\n    const response = await api.delete(`/recipes/${id}`);\n    return response.data;\n};\n\nexport default api;","import api from './api';\n\nconst authService = {\n    // Đăng nhập truyền thống\n    login: async (email, password) => {\n        try {\n            const response = await api.post('/auth/login', { email, password });\n            \n            // Lưu thông tin đăng nhập vào localStorage\n            if (response.data.token) {\n                localStorage.setItem('auth_token', response.data.token);\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error(\"Login error:\", error);\n            throw error.response ? error.response.data : error;\n        }\n    },\n    \n    // Đăng ký tài khoản\n    register: async (userData) => {\n        try {\n            const response = await api.post('/auth/register', userData);\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error;\n        }\n    },\n    \n    // Đăng nhập bằng Google (giữ lại nếu vẫn muốn dùng)\n    googleLogin: async (tokenId) => {\n        try {\n            console.log(\"Attempting to log in with token:\", tokenId ? \"Token exists\" : \"No token\");\n            const response = await api.post('/auth/google', { tokenId });\n            console.log(\"Login response:\", response.data);\n            \n            // Lưu thông tin đăng nhập vào localStorage\n            if (response.data.token) {\n                localStorage.setItem('auth_token', response.data.token);\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error(\"Google login error:\", error);\n            throw error.response ? error.response.data : error;\n        }\n    },\n\n    // Lấy thông tin người dùng hiện tại\n    getCurrentUser: async () => {\n        try {\n            const response = await api.get('/auth/me');\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error;\n        }\n    },\n    \n    // Đăng xuất\n    logout: () => {\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n    },\n\n    // Kiểm tra nếu đã đăng nhập\n    isAuthenticated: () => {\n        return !!localStorage.getItem('auth_token');\n    },\n\n    // Lấy thông tin người dùng từ localStorage\n    getUser: () => {\n        return JSON.parse(localStorage.getItem('user'));\n    },\n\n    // Kiểm tra nếu là admin\n    isAdmin: () => {\n        const user = authService.getUser();\n        return user && user.role === 'admin';\n    }\n};\n\nexport default authService;","import React, { createContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jwtDecode } from \"jwt-decode\";\n\nexport const AuthContext = createContext({\n  currentUser: null,\n  loading: true,\n  error: null,\n  isAuthenticated: false,\n  login: (user, token) => {},\n  loginWithGoogle: (credential) => Promise.resolve(),\n  logout: () => {}\n});\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // Kiểm tra trạng thái đăng nhập khi component mount\n    useEffect(() => {\n        const checkAuthStatus = async () => {\n            try {\n                const storedUser = localStorage.getItem('user');\n                const token = localStorage.getItem('auth_token');\n                \n                if (token && storedUser) {\n                    // Kiểm tra token hết hạn\n                    const decodedToken = jwtDecode(token);\n                    if (decodedToken.exp * 1000 < Date.now()) {\n                        // Token hết hạn\n                        authService.logout();\n                        setCurrentUser(null);\n                        setIsAuthenticated(false);\n                    } else {\n                        // Token còn hạn\n                        setCurrentUser(JSON.parse(storedUser));\n                        setIsAuthenticated(true);\n                        \n                        // Cập nhật thông tin người dùng từ server\n                        try {\n                            const userData = await authService.getCurrentUser();\n                            setCurrentUser(userData.data);\n                        } catch (err) {\n                            console.log(\"Could not fetch updated user info\");\n                        }\n                    }\n                }\n            } catch (err) {\n                console.error(\"Auth check error:\", err);\n                authService.logout();\n                setCurrentUser(null);\n                setIsAuthenticated(false);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuthStatus();\n    }, []);\n\n    // Đăng nhập truyền thống\n    const login = (user, token) => {\n        setCurrentUser(user);\n        setIsAuthenticated(true);\n    };\n\n    // Đăng nhập với Google (giữ lại nếu vẫn muốn dùng)\n    const loginWithGoogle = async (tokenId) => {\n        try {\n            setError(null);\n            setLoading(true);\n            \n            const result = await authService.googleLogin(tokenId);\n            \n            setCurrentUser(result.user);\n            setIsAuthenticated(true);\n            \n            return result;\n        } catch (err) {\n            setError(err.message || \"Login failed\");\n            throw err;\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Đăng xuất\n    const logout = () => {\n        authService.logout();\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n    };\n\n    // Context value\n    const value = {\n        currentUser,\n        loading,\n        error,\n        isAuthenticated,\n        login,\n        loginWithGoogle,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};","import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route, Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\nimport { AuthContext, AuthProvider } from './context/AuthContext';\nimport './App.css';\nimport CreateRecipePage from './pages/CreateRecipePage';\n\n// Placeholder components for each page\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  \n  const handleGoogleLogin = () => {\n    // In a real app, this would trigger Google OAuth\n    // For now, we'll just simulate a successful login and redirect\n    console.log(\"Google login clicked\");\n    navigate('/');\n  };\n\n  return (\n    <div className=\"page login-page\">\n      <h1>Login Page</h1>\n      <div className=\"login-container\">\n        <button className=\"google-login-btn\" onClick={handleGoogleLogin}>\n          Login with Google\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Fix the HomePage component\nconst HomePage = () => {\n  const navigate = useNavigate();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { currentUser, logout } = useContext(AuthContext);\n  \n  const handleCreateRecipe = () => {\n    navigate('/create');\n  };\n  \n  const handleSearch = () => {\n    if (searchQuery.trim()) {\n      navigate(`/search?q=${searchQuery}`);\n    }\n  };\n  \n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n  \n  return (\n    <div className=\"page home-page\">\n      <h1>Personal Profile</h1>\n      <div className=\"search-bar\">\n        <input \n          type=\"text\" \n          placeholder=\"Search recipes or users...\" \n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      \n      <div className=\"profile-section\">\n        <div className=\"profile-header\">\n          <div className=\"profile-avatar\">\n            {currentUser?.picture ? (\n              <img src={currentUser.picture} alt=\"Profile\" className=\"avatar-img\" />\n            ) : (\n              <div className=\"placeholder-avatar\">Avatar</div>\n            )}\n          </div>\n          <div className=\"profile-info\">\n            <h2>{currentUser?.name || \"User Name\"}</h2>\n            <p className=\"user-email\">{currentUser?.email || \"email@example.com\"}</p>\n            <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"profile-stats\">\n        <div className=\"stat\">Followers: 0</div>\n        <div className=\"stat\">Following: 0</div>\n        <div className=\"stat\">Posts: 0</div>\n      </div>\n      \n      <div className=\"action-buttons\">\n        <button className=\"create-post-btn\" onClick={handleCreateRecipe}>Create New Recipe</button>\n      </div>\n      \n      <div className=\"posts-container\">\n        <h2>Your Recipes</h2>\n        <p>No recipes yet. Create your first recipe!</p>\n      </div>\n    </div>\n  );\n};\n\nconst SearchResultsPage = () => (\n  <div className=\"page search-results-page\">\n    <h1>Search Results</h1>\n    <div className=\"search-bar\">\n      <input type=\"text\" placeholder=\"Search recipes or users...\" />\n      <button>Search</button>\n    </div>\n    <div className=\"filters\">\n      <button>Recipes</button>\n      <button>Users</button>\n      <button>Ingredients</button>\n      <button>Cooking Methods</button>\n    </div>\n    <div className=\"results-container\">\n      <p>No results found.</p>\n    </div>\n  </div>\n);\n\nconst CreatePostPage = () => (\n  <div className=\"page create-post-page\">\n    <h1>Create New Recipe</h1>\n    <form className=\"recipe-form\">\n      <div className=\"form-group\">\n        <label>Recipe Name*</label>\n        <input type=\"text\" required />\n      </div>\n      <div className=\"form-group\">\n        <label>Upload Image</label>\n        <input type=\"file\" accept=\"image/*\" />\n      </div>\n      <div className=\"form-group\">\n        <label>Ingredients*</label>\n        <textarea placeholder=\"Enter ingredients with measurements\" required></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label>Cooking Time*</label>\n        <input type=\"number\" min=\"1\" placeholder=\"Minutes\" required />\n      </div>\n      <div className=\"form-group\">\n        <label>Cooking Steps*</label>\n        <textarea placeholder=\"Describe the steps to prepare this recipe\" required></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label>Your Thoughts</label>\n        <textarea placeholder=\"Share your thoughts about this recipe\"></textarea>\n      </div>\n      <div className=\"form-actions\">\n        <button type=\"button\">Save as Draft</button>\n        <button type=\"submit\">Publish</button>\n      </div>\n    </form>\n  </div>\n);\n\nconst RecipeDetailPage = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  \n  const handleChatbotClick = () => {\n    navigate(`/chatbot/${id}`);\n  };\n  return (\n    <div className=\"page recipe-detail-page\">\n      <h1>Recipe Details</h1>\n      <div className=\"recipe-header\">\n        <h2>Recipe Name</h2>\n        <div className=\"recipe-meta\">\n          <span>By: User</span>\n          <span>Cooking Time: 0 mins</span>\n        </div>\n      </div>\n      <div className=\"recipe-image\">\n        <div className=\"placeholder-image\">Recipe Image</div>\n      </div>\n      <div className=\"recipe-ingredients\">\n        <h3>Ingredients</h3>\n        <p>No ingredients listed.</p>\n      </div>\n      <div className=\"recipe-steps\">\n        <h3>Instructions</h3>\n        <p>No instructions provided.</p>\n      </div>\n      <div className=\"recipe-actions\">\n        <button>Like</button>\n        <button>Save</button>\n        <button>Share</button>\n        <button>Export as PDF</button>\n        <button className=\"chatbot-btn\">Ask Chatbot</button>\n      </div>\n      <div className=\"recipe-comments\">\n        <h3>Comments</h3>\n        <div className=\"comment-form\">\n          <textarea placeholder=\"Add a comment...\"></textarea>\n          <button>Post</button>\n        </div>\n        <div className=\"comments-list\">\n          <p>No comments yet.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ChatbotPage = () => (\n  <div className=\"page chatbot-page\">\n    <h1>Recipe Assistant Chatbot</h1>\n    <div className=\"chat-container\">\n      <div className=\"chat-messages\">\n        <div className=\"message bot\">\n          Hello! I'm your recipe assistant. Ask me anything about this recipe!\n        </div>\n      </div>\n      <div className=\"chat-input\">\n        <input type=\"text\" placeholder=\"Type your question...\" />\n        <button>Send</button>\n      </div>\n    </div>\n  </div>\n);\n\nconst UserProfilePage = () => (\n  <div className=\"page user-profile-page\">\n    <h1>User Profile</h1>\n    <div className=\"profile-header\">\n      <div className=\"profile-avatar\">\n        <div className=\"placeholder-avatar\">User Avatar</div>\n      </div>\n      <div className=\"profile-info\">\n        <h2>User Name</h2>\n        <div className=\"profile-stats\">\n          <div className=\"stat\">Followers: 0</div>\n          <div className=\"stat\">Following: 0</div>\n          <div className=\"stat\">Posts: 0</div>\n        </div>\n        <button className=\"follow-btn\">Follow</button>\n      </div>\n    </div>\n    <div className=\"user-recipes\">\n      <h3>Recipes</h3>\n      <div className=\"recipes-grid\">\n        <p>No recipes published yet.</p>\n      </div>\n    </div>\n  </div>\n);\n\nconst AdminPage = () => (\n  <div className=\"page admin-page\">\n    <h1>Admin Dashboard</h1>\n    <div className=\"admin-sections\">\n      <div className=\"reports-section\">\n        <h2>User Reports</h2>\n        <p>No pending reports.</p>\n      </div>\n      <div className=\"content-moderation\">\n        <h2>Content Moderation</h2>\n        <p>No content waiting for review.</p>\n      </div>\n      <div className=\"user-management\">\n        <h2>User Management</h2>\n        <div className=\"user-search\">\n          <input type=\"text\" placeholder=\"Search users...\" />\n          <button>Search</button>\n        </div>\n        <p>No users found.</p>\n      </div>\n    </div>\n  </div>\n);\n\nconst LoginPageWrapper = ({ setIsLoggedIn }) => {\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const { loginWithGoogle } = useContext(AuthContext);\n  \n  const handleGoogleSuccess = async (credentialResponse) => {\n    try {\n      // Process the Google response through your AuthContext\n      await loginWithGoogle(credentialResponse.credential);\n      setIsLoggedIn(true);\n      navigate('/');\n    } catch (err) {\n      setError('Authentication failed. Please try again.');\n      console.error(err);\n    }\n  };\n\n  const handleGoogleError = () => {\n    setError('Google Sign-In failed. Please try again.');\n  };\n  \n  return (\n    <div className=\"page login-page\">\n      <h1>Login Page</h1>\n      {error && <p className=\"error-message\">{error}</p>}\n      <div className=\"login-container\">\n        <GoogleLogin\n          onSuccess={handleGoogleSuccess}\n          onError={handleGoogleError}\n          useOneTap\n          theme=\"filled_blue\"\n          text=\"signin_with\"\n          shape=\"pill\"\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(true);\n\n  // Check authentication status on mount and when currentUser changes\n  useEffect(() => {\n    // Check if there's a token in localStorage\n    const token = localStorage.getItem('auth_token');\n    if (token) {\n      setIsLoggedIn(true);\n    } else {\n      setIsLoggedIn(false);\n    }\n  }, []);\n\n  return (\n    <GoogleOAuthProvider clientId=\"202449099306-kkaij5aksnet6l64aahh5ia9o1gb25vk.apps.googleusercontent.com\">\n      <AuthProvider>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/login\" element={<LoginPageWrapper setIsLoggedIn={setIsLoggedIn} />} />\n              <Route path=\"/\" element={isLoggedIn ? <HomePage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/search\" element={isLoggedIn ? <SearchResultsPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/create-recipe\" element={isLoggedIn ? <CreatePostPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/create\" element={<Navigate to=\"/create-recipe\" />} />\n              <Route path=\"/recipe/:id\" element={isLoggedIn ? <RecipeDetailPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/chatbot/:recipeId\" element={isLoggedIn ? <ChatbotPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/profile/:id\" element={isLoggedIn ? <UserProfilePage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"/admin\" element={isLoggedIn && isAdmin ? <AdminPage /> : <Navigate to=\"/login\" />} />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </AuthProvider>\n    </GoogleOAuthProvider>\n  );\n}\nexport default App;","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\n// Kiểm tra lỗi\ntry {\n  const rootElement = document.getElementById(\"root\");\n  const root = createRoot(rootElement);\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n} catch (error) {\n  console.error(\"React rendering error:\", error);\n  // Hiển thị thông báo lỗi trên giao diện\n  document.getElementById(\"root\").innerHTML = `\n    <div style=\"color: red; margin: 20px;\">\n      <h2>Error initializing app</h2>\n      <p>${error.message}</p>\n      <p>Please check the console for more details.</p>\n    </div>\n  `;\n}"],"sourceRoot":""}