{"ast":null,"code":"var _s = $RefreshSig$();\n/**\r\n * Hook tạo màu ổn định dựa trên ID\r\n * @param {string|number} id - ID để tạo màu\r\n * @returns {string} - Mã màu HEX\r\n */\nimport { useMemo } from 'react';\nexport const useStableColor = id => {\n  _s();\n  return useMemo(() => {\n    // Danh sách các màu pastel đẹp\n    const colors = ['#FFD6D6', '#FFEFCF', '#DCFFE4', '#DAF2FF', '#E5DBFF', '#FFE2C8', '#D6FFDB', '#D6E8FF', '#F0D6FF', '#FFD6F1', '#C8F4FF', '#FFF9C8', '#FFD6D6', '#E5FFDA', '#D9E8FF'];\n\n    // Nếu không có ID, trả về một màu mặc định\n    if (!id) return colors[0];\n\n    // Chuyển ID thành số để lấy index\n    let numericId;\n    if (typeof id === 'number') {\n      numericId = id;\n    } else if (typeof id === 'string') {\n      // Tạo một số từ chuỗi\n      let hashCode = 0;\n      for (let i = 0; i < id.length; i++) {\n        hashCode = (hashCode << 5) - hashCode + id.charCodeAt(i);\n        hashCode |= 0; // Chuyển thành 32bit integer\n      }\n      numericId = Math.abs(hashCode);\n    } else {\n      return colors[0];\n    }\n\n    // Lấy màu từ mảng colors dựa trên ID\n    return colors[numericId % colors.length];\n  }, [id]);\n};\n_s(useStableColor, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");","map":{"version":3,"names":["useMemo","useStableColor","id","_s","colors","numericId","hashCode","i","length","charCodeAt","Math","abs"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/utils/colorUtils.js"],"sourcesContent":["/**\r\n * Hook tạo màu ổn định dựa trên ID\r\n * @param {string|number} id - ID để tạo màu\r\n * @returns {string} - Mã màu HEX\r\n */\r\nimport { useMemo } from 'react';\r\n\r\nexport const useStableColor = (id) => {\r\n  return useMemo(() => {\r\n    // Danh sách các màu pastel đẹp\r\n    const colors = [\r\n      '#FFD6D6', '#FFEFCF', '#DCFFE4', '#DAF2FF', '#E5DBFF',\r\n      '#FFE2C8', '#D6FFDB', '#D6E8FF', '#F0D6FF', '#FFD6F1',\r\n      '#C8F4FF', '#FFF9C8', '#FFD6D6', '#E5FFDA', '#D9E8FF'\r\n    ];\r\n    \r\n    // Nếu không có ID, trả về một màu mặc định\r\n    if (!id) return colors[0];\r\n    \r\n    // Chuyển ID thành số để lấy index\r\n    let numericId;\r\n    if (typeof id === 'number') {\r\n      numericId = id;\r\n    } else if (typeof id === 'string') {\r\n      // Tạo một số từ chuỗi\r\n      let hashCode = 0;\r\n      for (let i = 0; i < id.length; i++) {\r\n        hashCode = ((hashCode << 5) - hashCode) + id.charCodeAt(i);\r\n        hashCode |= 0; // Chuyển thành 32bit integer\r\n      }\r\n      numericId = Math.abs(hashCode);\r\n    } else {\r\n      return colors[0];\r\n    }\r\n    \r\n    // Lấy màu từ mảng colors dựa trên ID\r\n    return colors[numericId % colors.length];\r\n  }, [id]);\r\n};"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAO,QAAQ,OAAO;AAE/B,OAAO,MAAMC,cAAc,GAAIC,EAAE,IAAK;EAAAC,EAAA;EACpC,OAAOH,OAAO,CAAC,MAAM;IACnB;IACA,MAAMI,MAAM,GAAG,CACb,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EACrD,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CACtD;;IAED;IACA,IAAI,CAACF,EAAE,EAAE,OAAOE,MAAM,CAAC,CAAC,CAAC;;IAEzB;IACA,IAAIC,SAAS;IACb,IAAI,OAAOH,EAAE,KAAK,QAAQ,EAAE;MAC1BG,SAAS,GAAGH,EAAE;IAChB,CAAC,MAAM,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MACjC;MACA,IAAII,QAAQ,GAAG,CAAC;MAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,EAAE,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QAClCD,QAAQ,GAAI,CAACA,QAAQ,IAAI,CAAC,IAAIA,QAAQ,GAAIJ,EAAE,CAACO,UAAU,CAACF,CAAC,CAAC;QAC1DD,QAAQ,IAAI,CAAC,CAAC,CAAC;MACjB;MACAD,SAAS,GAAGK,IAAI,CAACC,GAAG,CAACL,QAAQ,CAAC;IAChC,CAAC,MAAM;MACL,OAAOF,MAAM,CAAC,CAAC,CAAC;IAClB;;IAEA;IACA,OAAOA,MAAM,CAACC,SAAS,GAAGD,MAAM,CAACI,MAAM,CAAC;EAC1C,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;AACV,CAAC;AAACC,EAAA,CA/BWF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}