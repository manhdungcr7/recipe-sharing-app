{"ast":null,"code":"import axios from 'axios';\nimport api from './api';\nconst API_URL = '/api/chatbot';\nexport const sendMessageToChatbot = async message => {\n  try {\n    const response = await axios.post(`${API_URL}/send`, {\n      message\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error sending message to chatbot:', error);\n    throw error;\n  }\n};\nexport const getChatbotResponse = async userId => {\n  try {\n    const response = await axios.get(`${API_URL}/response/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching chatbot response:', error);\n    throw error;\n  }\n};\n\n// Gửi câu hỏi tới chatbot\nexport const askChatbot = async (recipeId, question) => {\n  try {\n    const response = await api.post('/chatbot', {\n      recipeId,\n      question\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error asking chatbot: ' + error.message);\n  }\n};","map":{"version":3,"names":["axios","api","API_URL","sendMessageToChatbot","message","response","post","data","error","console","getChatbotResponse","userId","get","askChatbot","recipeId","question","Error"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/chatbotService.js"],"sourcesContent":["import axios from 'axios';\nimport api from './api';\n\nconst API_URL = '/api/chatbot';\n\nexport const sendMessageToChatbot = async (message) => {\n    try {\n        const response = await axios.post(`${API_URL}/send`, { message });\n        return response.data;\n    } catch (error) {\n        console.error('Error sending message to chatbot:', error);\n        throw error;\n    }\n};\n\nexport const getChatbotResponse = async (userId) => {\n    try {\n        const response = await axios.get(`${API_URL}/response/${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching chatbot response:', error);\n        throw error;\n    }\n};\n\n// Gửi câu hỏi tới chatbot\nexport const askChatbot = async (recipeId, question) => {\n    try {\n        const response = await api.post('/chatbot', {\n            recipeId,\n            question\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error asking chatbot: ' + error.message);\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAEvB,MAAMC,OAAO,GAAG,cAAc;AAE9B,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,OAAO,IAAK;EACnD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGJ,OAAO,OAAO,EAAE;MAAEE;IAAQ,CAAC,CAAC;IACjE,OAAOC,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IACzD,MAAMA,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAME,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACA,MAAMN,QAAQ,GAAG,MAAML,KAAK,CAACY,GAAG,CAAC,GAAGV,OAAO,aAAaS,MAAM,EAAE,CAAC;IACjE,OAAON,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACpD,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,UAAU,EAAE;MACxCQ,QAAQ;MACRC;IACJ,CAAC,CAAC;IACF,OAAOV,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIQ,KAAK,CAAC,wBAAwB,GAAGR,KAAK,CAACJ,OAAO,CAAC;EAC7D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}