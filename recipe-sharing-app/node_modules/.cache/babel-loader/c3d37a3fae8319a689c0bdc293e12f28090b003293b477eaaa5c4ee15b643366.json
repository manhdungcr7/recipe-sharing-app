{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\components\\\\chatbot\\\\ChatbotModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { askChatbot } from '../../services/chatbotService';\nimport ChatMessage from './ChatMessage';\nimport './ChatbotModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotModal = ({\n  recipeId,\n  recipeTitle,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: `Xin chào! Tôi có thể giúp gì cho bạn về công thức \"${recipeTitle}\"?`,\n    isBot: true\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Cuộn xuống cuối cuộc trò chuyện khi có tin nhắn mới\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Xử lý gửi tin nhắn\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n\n    // Thêm tin nhắn của người dùng\n    const userMessage = {\n      id: Date.now(),\n      text: inputText,\n      isBot: false\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsLoading(true);\n    try {\n      // Giả lập gọi API đến dịch vụ chatbot\n      setTimeout(() => {\n        // Thêm phản hồi của bot\n        const botResponse = {\n          id: Date.now() + 1,\n          text: `Cảm ơn bạn đã hỏi về \"${inputText}\". Tính năng chatbot đang được phát triển và sẽ sớm hoạt động đầy đủ.`,\n          isBot: true\n        };\n        setMessages(prev => [...prev, botResponse]);\n        setIsLoading(false);\n      }, 1000);\n    } catch (error) {\n      console.error('Error sending message to chatbot:', error);\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chatbot h\\u1ED7 tr\\u1EE3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.isBot ? 'bot' : 'user'}`,\n          children: msg.text\n        }, msg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n...\",\n          onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          disabled: isLoading,\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotModal, \"lJPlSsXGYMc9/n1BE9XSVq7+Z5Q=\");\n_c = ChatbotModal;\nexport default ChatbotModal;\nvar _c;\n$RefreshReg$(_c, \"ChatbotModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","askChatbot","ChatMessage","jsxDEV","_jsxDEV","ChatbotModal","recipeId","recipeTitle","onClose","_s","messages","setMessages","id","text","isBot","inputText","setInputText","isLoading","setIsLoading","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","Date","now","prev","setTimeout","botResponse","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","ref","type","value","onChange","e","target","placeholder","onKeyPress","key","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/components/chatbot/ChatbotModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { askChatbot } from '../../services/chatbotService';\r\nimport ChatMessage from './ChatMessage';\r\nimport './ChatbotModal.css';\r\n\r\nconst ChatbotModal = ({ recipeId, recipeTitle, onClose }) => {\r\n    const [messages, setMessages] = useState([\r\n        { id: 1, text: `Xin chào! Tôi có thể giúp gì cho bạn về công thức \"${recipeTitle}\"?`, isBot: true }\r\n    ]);\r\n    const [inputText, setInputText] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n    \r\n    // Cuộn xuống cuối cuộc trò chuyện khi có tin nhắn mới\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n    \r\n    // Xử lý gửi tin nhắn\r\n    const handleSendMessage = async () => {\r\n        if (!inputText.trim()) return;\r\n        \r\n        // Thêm tin nhắn của người dùng\r\n        const userMessage = { id: Date.now(), text: inputText, isBot: false };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInputText('');\r\n        setIsLoading(true);\r\n        \r\n        try {\r\n            // Giả lập gọi API đến dịch vụ chatbot\r\n            setTimeout(() => {\r\n                // Thêm phản hồi của bot\r\n                const botResponse = { \r\n                    id: Date.now() + 1, \r\n                    text: `Cảm ơn bạn đã hỏi về \"${inputText}\". Tính năng chatbot đang được phát triển và sẽ sớm hoạt động đầy đủ.`, \r\n                    isBot: true \r\n                };\r\n                setMessages(prev => [...prev, botResponse]);\r\n                setIsLoading(false);\r\n            }, 1000);\r\n            \r\n        } catch (error) {\r\n            console.error('Error sending message to chatbot:', error);\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-modal-overlay\">\r\n            <div className=\"chatbot-modal\">\r\n                <div className=\"chatbot-header\">\r\n                    <h3>Chatbot hỗ trợ</h3>\r\n                    <button onClick={onClose} className=\"close-button\">×</button>\r\n                </div>\r\n                \r\n                <div className=\"chatbot-messages\">\r\n                    {messages.map(msg => (\r\n                        <div key={msg.id} className={`message ${msg.isBot ? 'bot' : 'user'}`}>\r\n                            {msg.text}\r\n                        </div>\r\n                    ))}\r\n                    {isLoading && (\r\n                        <div className=\"message bot loading\">\r\n                            <span>.</span><span>.</span><span>.</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n                \r\n                <div className=\"chatbot-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={inputText}\r\n                        onChange={(e) => setInputText(e.target.value)}\r\n                        placeholder=\"Nhập câu hỏi của bạn...\"\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                    />\r\n                    <button onClick={handleSendMessage} disabled={isLoading}>Gửi</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}