{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  loading: true,\n  error: null,\n  isAuthenticated: false,\n  login: (user, token) => {},\n  logout: () => {}\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Kiểm tra trạng thái đăng nhập khi component mount\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      try {\n        const storedUser = localStorage.getItem('user');\n        const token = localStorage.getItem('auth_token');\n        if (token && storedUser) {\n          // Kiểm tra token hết hạn\n          try {\n            const decodedToken = jwtDecode(token);\n            if (decodedToken.exp * 1000 < Date.now()) {\n              // Token hết hạn\n              authService.logout();\n              setCurrentUser(null);\n              setIsAuthenticated(false);\n            } else {\n              // Token còn hạn\n              setCurrentUser(JSON.parse(storedUser));\n              setIsAuthenticated(true);\n\n              // Cập nhật thông tin người dùng từ server\n              try {\n                const userData = await authService.getCurrentUser();\n                if (userData && userData.data) {\n                  setCurrentUser(userData.data);\n                }\n              } catch (err) {\n                console.log(\"Could not fetch updated user info\");\n              }\n            }\n          } catch (err) {\n            console.error(\"Invalid token:\", err);\n            authService.logout();\n            setCurrentUser(null);\n            setIsAuthenticated(false);\n          }\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuthStatus();\n  }, []);\n\n  // Đăng nhập\n  const login = (user, token) => {\n    setCurrentUser(user);\n    setIsAuthenticated(true);\n  };\n\n  // Đăng xuất\n  const logout = () => {\n    authService.logout();\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Context value\n  const value = {\n    currentUser,\n    loading,\n    error,\n    isAuthenticated,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"WPajnuPigti7mWYEkYmKZfTIuBU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","authService","jwtDecode","jsxDEV","_jsxDEV","AuthContext","currentUser","loading","error","isAuthenticated","login","user","token","logout","AuthProvider","children","_s","setCurrentUser","setLoading","setError","setIsAuthenticated","checkAuthStatus","storedUser","localStorage","getItem","decodedToken","exp","Date","now","JSON","parse","userData","getCurrentUser","data","err","console","log","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport authService from '../services/authService';\nimport { jwtDecode } from \"jwt-decode\";\n\nexport const AuthContext = createContext({\n  currentUser: null,\n  loading: true,\n  error: null,\n  isAuthenticated: false,\n  login: (user, token) => {},\n  logout: () => {}\n});\n\nexport const AuthProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    // Kiểm tra trạng thái đăng nhập khi component mount\n    useEffect(() => {\n        const checkAuthStatus = async () => {\n            try {\n                const storedUser = localStorage.getItem('user');\n                const token = localStorage.getItem('auth_token');\n                \n                if (token && storedUser) {\n                    // Kiểm tra token hết hạn\n                    try {\n                        const decodedToken = jwtDecode(token);\n                        if (decodedToken.exp * 1000 < Date.now()) {\n                            // Token hết hạn\n                            authService.logout();\n                            setCurrentUser(null);\n                            setIsAuthenticated(false);\n                        } else {\n                            // Token còn hạn\n                            setCurrentUser(JSON.parse(storedUser));\n                            setIsAuthenticated(true);\n                            \n                            // Cập nhật thông tin người dùng từ server\n                            try {\n                                const userData = await authService.getCurrentUser();\n                                if (userData && userData.data) {\n                                    setCurrentUser(userData.data);\n                                }\n                            } catch (err) {\n                                console.log(\"Could not fetch updated user info\");\n                            }\n                        }\n                    } catch (err) {\n                        console.error(\"Invalid token:\", err);\n                        authService.logout();\n                        setCurrentUser(null);\n                        setIsAuthenticated(false);\n                    }\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        checkAuthStatus();\n    }, []);\n\n    // Đăng nhập\n    const login = (user, token) => {\n        setCurrentUser(user);\n        setIsAuthenticated(true);\n    };\n\n    // Đăng xuất\n    const logout = () => {\n        authService.logout();\n        setCurrentUser(null);\n        setIsAuthenticated(false);\n    };\n\n    // Context value\n    const value = {\n        currentUser,\n        loading,\n        error,\n        isAuthenticated,\n        login,\n        logout,\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}