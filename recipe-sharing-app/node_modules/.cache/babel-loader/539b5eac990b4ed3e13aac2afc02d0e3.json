{"ast":null,"code":"import api from './api';\nexport const getReports = async () => {\n  try {\n    const response = await api.get('/admin/reports');\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching reports: ' + error.message);\n  }\n};\nexport const deleteReport = async reportId => {\n  try {\n    const response = await api.delete(`/admin/reports/${reportId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error deleting report: ' + error.message);\n  }\n};\nexport const moderateContent = async (contentId, action) => {\n  try {\n    const response = await api.post(`/admin/moderate`, {\n      contentId,\n      action\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error moderating content: ' + error.message);\n  }\n};\nexport const manageUser = async (userId, action) => {\n  try {\n    const response = await api.post(`/admin/users/${userId}`, {\n      action\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error managing user: ' + error.message);\n  }\n};","map":{"version":3,"names":["api","getReports","response","get","data","error","Error","message","deleteReport","reportId","delete","moderateContent","contentId","action","post","manageUser","userId"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/adminService.js"],"sourcesContent":["import api from './api';\n\nexport const getReports = async () => {\n    try {\n        const response = await api.get('/admin/reports');\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching reports: ' + error.message);\n    }\n};\n\nexport const deleteReport = async (reportId) => {\n    try {\n        const response = await api.delete(`/admin/reports/${reportId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error deleting report: ' + error.message);\n    }\n};\n\nexport const moderateContent = async (contentId, action) => {\n    try {\n        const response = await api.post(`/admin/moderate`, { contentId, action });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error moderating content: ' + error.message);\n    }\n};\n\nexport const manageUser = async (userId, action) => {\n    try {\n        const response = await api.post(`/admin/users/${userId}`, { action });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error managing user: ' + error.message);\n    }\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,GAAG,CAACG,GAAG,CAAC,gBAAgB,CAAC;IAChD,OAAOD,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,0BAA0B,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC/D;AACJ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMF,GAAG,CAACU,MAAM,CAAC,kBAAkBD,QAAQ,EAAE,CAAC;IAC/D,OAAOP,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,yBAAyB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC9D;AACJ,CAAC;AAED,OAAO,MAAMI,eAAe,GAAG,MAAAA,CAAOC,SAAS,EAAEC,MAAM,KAAK;EACxD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACc,IAAI,CAAC,iBAAiB,EAAE;MAAEF,SAAS;MAAEC;IAAO,CAAC,CAAC;IACzE,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4BAA4B,GAAGD,KAAK,CAACE,OAAO,CAAC;EACjE;AACJ,CAAC;AAED,OAAO,MAAMQ,UAAU,GAAG,MAAAA,CAAOC,MAAM,EAAEH,MAAM,KAAK;EAChD,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMF,GAAG,CAACc,IAAI,CAAC,gBAAgBE,MAAM,EAAE,EAAE;MAAEH;IAAO,CAAC,CAAC;IACrE,OAAOX,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,uBAAuB,GAAGD,KAAK,CAACE,OAAO,CAAC;EAC5D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}