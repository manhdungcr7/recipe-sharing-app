{"ast":null,"code":"import api from './api';\n\n// Lấy thông tin người dùng\nexport const getUserProfile = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching user profile: ' + error.message);\n  }\n};\n\n// Lấy công thức của người dùng\nexport const getUserRecipes = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/recipes`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching user recipes: ' + error.message);\n  }\n};\n\n// Cập nhật thông tin người dùng\nexport const updateUserProfile = async (userId, userData) => {\n  try {\n    const response = await api.put(`/users/${userId}`, userData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error updating profile: ' + error.message);\n  }\n};\n\n// Follow/Unfollow người dùng\nexport const followUser = async userId => {\n  try {\n    const response = await api.post(`/users/${userId}/follow`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error following user: ' + error.message);\n  }\n};\n\n// Lấy danh sách followers\nexport const getUserFollowers = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/followers`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching followers: ' + error.message);\n  }\n};\n\n// Lấy danh sách following\nexport const getUserFollowing = async userId => {\n  try {\n    const response = await api.get(`/users/${userId}/following`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching following: ' + error.message);\n  }\n};\n\n// Lấy danh sách công thức đã lưu\nexport const getSavedRecipes = async () => {\n  try {\n    const response = await api.get('/users/me/saved');\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching saved recipes: ' + error.message);\n  }\n};\n\n// Gửi báo cáo vi phạm\nexport const reportUser = async (userId, reason, details) => {\n  try {\n    const response = await api.post(`/users/${userId}/report`, {\n      reason,\n      details\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error('Error reporting user: ' + error.message);\n  }\n};\n\n// Tìm kiếm người dùng\nexport const searchUsers = async query => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const headers = token ? {\n      'Authorization': `Bearer ${token}`\n    } : {};\n    const response = await fetch(`http://localhost:5000/api/search/users?query=${encodeURIComponent(query)}`, {\n      headers\n    });\n    if (!response.ok) {\n      throw new Error('Không thể tìm kiếm người dùng');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error searching users:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","getUserProfile","userId","response","get","data","error","Error","message","getUserRecipes","updateUserProfile","userData","put","headers","followUser","post","getUserFollowers","getUserFollowing","getSavedRecipes","reportUser","reason","details","searchUsers","query","token","localStorage","getItem","fetch","encodeURIComponent","ok","json","console"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/userService.js"],"sourcesContent":["import api from './api';\n\n// Lấy thông tin người dùng\nexport const getUserProfile = async (userId) => {\n    try {\n        const response = await api.get(`/users/${userId}`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching user profile: ' + error.message);\n    }\n};\n\n// Lấy công thức của người dùng\nexport const getUserRecipes = async (userId) => {\n    try {\n        const response = await api.get(`/users/${userId}/recipes`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching user recipes: ' + error.message);\n    }\n};\n\n// Cập nhật thông tin người dùng\nexport const updateUserProfile = async (userId, userData) => {\n    try {\n        const response = await api.put(`/users/${userId}`, userData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            },\n        });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error updating profile: ' + error.message);\n    }\n};\n\n// Follow/Unfollow người dùng\nexport const followUser = async (userId) => {\n    try {\n        const response = await api.post(`/users/${userId}/follow`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error following user: ' + error.message);\n    }\n};\n\n// Lấy danh sách followers\nexport const getUserFollowers = async (userId) => {\n    try {\n        const response = await api.get(`/users/${userId}/followers`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching followers: ' + error.message);\n    }\n};\n\n// Lấy danh sách following\nexport const getUserFollowing = async (userId) => {\n    try {\n        const response = await api.get(`/users/${userId}/following`);\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching following: ' + error.message);\n    }\n};\n\n// Lấy danh sách công thức đã lưu\nexport const getSavedRecipes = async () => {\n    try {\n        const response = await api.get('/users/me/saved');\n        return response.data;\n    } catch (error) {\n        throw new Error('Error fetching saved recipes: ' + error.message);\n    }\n};\n\n// Gửi báo cáo vi phạm\nexport const reportUser = async (userId, reason, details) => {\n    try {\n        const response = await api.post(`/users/${userId}/report`, { reason, details });\n        return response.data;\n    } catch (error) {\n        throw new Error('Error reporting user: ' + error.message);\n    }\n};\n\n// Tìm kiếm người dùng\nexport const searchUsers = async (query) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const headers = token ? { 'Authorization': `Bearer ${token}` } : {};\n    \n    const response = await fetch(`http://localhost:5000/api/search/users?query=${encodeURIComponent(query)}`, {\n      headers\n    });\n    \n    if (!response.ok) {\n      throw new Error('Không thể tìm kiếm người dùng');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error searching users:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}