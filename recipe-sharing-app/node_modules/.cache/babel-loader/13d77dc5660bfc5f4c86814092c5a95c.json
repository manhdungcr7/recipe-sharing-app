{"ast":null,"code":"import api from'./api';const authService={// Đăng nhập bằng Google\ngoogleLogin:async tokenId=>{try{console.log(\"Attempting to log in with token:\",tokenId?\"Token exists\":\"No token\");const response=await api.post('/auth/google',{tokenId});console.log(\"Login response:\",response.data);// Lưu thông tin đăng nhập vào localStorage\nif(response.data.token){localStorage.setItem('auth_token',response.data.token);localStorage.setItem('user',JSON.stringify(response.data.user));}return response.data;}catch(error){console.error(\"Google login error:\",error);throw error.response?error.response.data:error;}},// Lấy thông tin người dùng hiện tại\ngetCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data;}catch(error){throw error.response?error.response.data:error;}},// Đăng xuất\nlogout:()=>{localStorage.removeItem('auth_token');localStorage.removeItem('user');},// Kiểm tra nếu đã đăng nhập\nisAuthenticated:()=>{return!!localStorage.getItem('auth_token');},// Lấy thông tin người dùng từ localStorage\ngetUser:()=>{return JSON.parse(localStorage.getItem('user'));},// Kiểm tra nếu là admin\nisAdmin:()=>{const user=authService.getUser();return user&&user.role==='admin';}};export default authService;","map":{"version":3,"names":["api","authService","googleLogin","tokenId","console","log","response","post","data","token","localStorage","setItem","JSON","stringify","user","error","getCurrentUser","get","logout","removeItem","isAuthenticated","getItem","getUser","parse","isAdmin","role"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/authService.js"],"sourcesContent":["import api from './api';\n\nconst authService = {\n    // Đăng nhập bằng Google\n    googleLogin: async (tokenId) => {\n        try {\n            console.log(\"Attempting to log in with token:\", tokenId ? \"Token exists\" : \"No token\");\n            const response = await api.post('/auth/google', { tokenId });\n            console.log(\"Login response:\", response.data);\n            \n            // Lưu thông tin đăng nhập vào localStorage\n            if (response.data.token) {\n                localStorage.setItem('auth_token', response.data.token);\n                localStorage.setItem('user', JSON.stringify(response.data.user));\n            }\n            \n            return response.data;\n        } catch (error) {\n            console.error(\"Google login error:\", error);\n            throw error.response ? error.response.data : error;\n        }\n    },\n\n    // Lấy thông tin người dùng hiện tại\n    getCurrentUser: async () => {\n        try {\n            const response = await api.get('/auth/me');\n            return response.data;\n        } catch (error) {\n            throw error.response ? error.response.data : error;\n        }\n    },\n\n    // Đăng xuất\n    logout: () => {\n        localStorage.removeItem('auth_token');\n        localStorage.removeItem('user');\n    },\n\n    // Kiểm tra nếu đã đăng nhập\n    isAuthenticated: () => {\n        return !!localStorage.getItem('auth_token');\n    },\n\n    // Lấy thông tin người dùng từ localStorage\n    getUser: () => {\n        return JSON.parse(localStorage.getItem('user'));\n    },\n\n    // Kiểm tra nếu là admin\n    isAdmin: () => {\n        const user = authService.getUser();\n        return user && user.role === 'admin';\n    }\n};\n\nexport default authService;"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,WAAW,CAAG,CAChB;AACAC,WAAW,CAAE,KAAO,CAAAC,OAAO,EAAK,CAC5B,GAAI,CACAC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEF,OAAO,CAAG,cAAc,CAAG,UAAU,CAAC,CACtF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACO,IAAI,CAAC,cAAc,CAAE,CAAEJ,OAAQ,CAAC,CAAC,CAC5DC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEC,QAAQ,CAACE,IAAI,CAAC,CAE7C;AACA,GAAIF,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACrBC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACvDC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACE,IAAI,CAACM,IAAI,CAAC,CAAC,CACpE,CAEA,MAAO,CAAAR,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOO,KAAK,CAAE,CACZX,OAAO,CAACW,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,KAAM,CAAAA,KAAK,CAACT,QAAQ,CAAGS,KAAK,CAACT,QAAQ,CAACE,IAAI,CAAGO,KAAK,CACtD,CACJ,CAAC,CAED;AACAC,cAAc,CAAE,KAAAA,CAAA,GAAY,CACxB,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAN,GAAG,CAACiB,GAAG,CAAC,UAAU,CAAC,CAC1C,MAAO,CAAAX,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOO,KAAK,CAAE,CACZ,KAAM,CAAAA,KAAK,CAACT,QAAQ,CAAGS,KAAK,CAACT,QAAQ,CAACE,IAAI,CAAGO,KAAK,CACtD,CACJ,CAAC,CAED;AACAG,MAAM,CAAEA,CAAA,GAAM,CACVR,YAAY,CAACS,UAAU,CAAC,YAAY,CAAC,CACrCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC,CACnC,CAAC,CAED;AACAC,eAAe,CAAEA,CAAA,GAAM,CACnB,MAAO,CAAC,CAACV,YAAY,CAACW,OAAO,CAAC,YAAY,CAAC,CAC/C,CAAC,CAED;AACAC,OAAO,CAAEA,CAAA,GAAM,CACX,MAAO,CAAAV,IAAI,CAACW,KAAK,CAACb,YAAY,CAACW,OAAO,CAAC,MAAM,CAAC,CAAC,CACnD,CAAC,CAED;AACAG,OAAO,CAAEA,CAAA,GAAM,CACX,KAAM,CAAAV,IAAI,CAAGb,WAAW,CAACqB,OAAO,CAAC,CAAC,CAClC,MAAO,CAAAR,IAAI,EAAIA,IAAI,CAACW,IAAI,GAAK,OAAO,CACxC,CACJ,CAAC,CAED,cAAe,CAAAxB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}