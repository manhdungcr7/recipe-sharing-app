{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\components\\\\comment\\\\Comments.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Comments.css';\nimport ReportButton from '../report/ReportButton';\n\n// Thêm hàm này vào đây\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction addReplyToComments(comments, parentId, reply) {\n  return comments.map(comment => {\n    // Dùng parent_id thay vì parent_comment_id\n    if (comment.id === parentId) {\n      // Đảm bảo reply có parent_comment_id đúng cho frontend\n      const formattedReply = {\n        ...reply,\n        parent_comment_id: parentId\n      };\n      return {\n        ...comment,\n        replies: [...(comment.replies || []), formattedReply]\n      };\n    } else if (comment.replies && comment.replies.length > 0) {\n      return {\n        ...comment,\n        replies: addReplyToComments(comment.replies, parentId, reply)\n      };\n    } else {\n      return comment;\n    }\n  });\n}\nconst Comments = ({\n  recipeId\n}) => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [replyTexts, setReplyTexts] = useState({});\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Thêm hàm fetchComments ra khỏi useEffect để có thể tái sử dụng\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`);\n      if (!response.ok) {\n        throw new Error('Không thể tải bình luận');\n      }\n      const data = await response.json();\n      setComments(data.data || []);\n    } catch (err) {\n      console.error('Error fetching comments:', err);\n      setError('Không thể tải bình luận. Vui lòng thử lại sau.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchComments();\n  }, [recipeId]);\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    if (!newComment.trim()) return;\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          text: newComment\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Thêm comment mới vào danh sách\n        if (result.data) {\n          setComments(prev => [result.data, ...prev]);\n          setNewComment('');\n        }\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Không thể đăng bình luận');\n      }\n    } catch (err) {\n      console.error('Error posting comment:', err);\n      alert(`Lỗi: ${err.message}`);\n    }\n  };\n  const handleReply = commentId => {\n    setReplyingTo(commentId);\n    setReplyTexts(prev => ({\n      ...prev,\n      [commentId]: ''\n    }));\n  };\n  const handleChangeReplyText = (commentId, text) => {\n    setReplyTexts(prev => ({\n      ...prev,\n      [commentId]: text\n    }));\n  };\n  const handleSubmitReply = async (commentId, localReplyText) => {\n    if (!(localReplyText !== null && localReplyText !== void 0 && localReplyText.trim())) return;\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`http://localhost:5000/api/comments/${commentId}/reply`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          text: localReplyText\n        })\n      });\n\n      // Sau khi gửi reply thành công:\n      if (response.ok) {\n        const result = await response.json();\n        setComments(prev => addReplyToComments(prev, commentId, result.data));\n        setReplyingTo(null);\n        setReplyTexts(prev => ({\n          ...prev,\n          [commentId]: ''\n        }));\n\n        // Gọi fetchComments để refresh comments từ server\n        fetchComments();\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Không thể trả lời bình luận');\n      }\n    } catch (err) {\n      console.error('Error replying to comment:', err);\n      alert(`Lỗi: ${err.message}`);\n    }\n  };\n  const handleCancelReply = () => {\n    setReplyingTo(null);\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString('vi-VN', options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-loading\",\n      children: \"\\u0110ang t\\u1EA3i b\\xECnh lu\\u1EADn...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  const CommentItem = ({\n    comment,\n    handleReply,\n    replyingTo,\n    handleSubmitReply,\n    handleCancelReply,\n    currentUser\n  }) => {\n    _s();\n    // Mỗi component có state riêng\n    const [localReplyText, setLocalReplyText] = useState('');\n\n    // Khi component được chọn để reply\n    const isReplying = replyingTo === comment.id;\n\n    // Reset text khi reply form mới mở\n    useEffect(() => {\n      if (isReplying) setLocalReplyText('');\n    }, [isReplying]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-avatar\",\n        children: comment.user_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000${comment.user_picture}`,\n          alt: comment.user_name,\n          onError: e => {\n            e.target.onerror = null;\n            e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(comment.user_name)}&background=random`;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-placeholder\",\n          children: comment.user_name ? comment.user_name[0].toUpperCase() : 'U'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-author\",\n            children: comment.user_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-date\",\n            children: formatDate(comment.created_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), currentUser && currentUser.id !== comment.user_id && /*#__PURE__*/_jsxDEV(ReportButton, {\n            type: \"comment\",\n            id: comment.id,\n            title: `Comment by ${comment.user_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-text\",\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"reply-button\",\n            onClick: () => handleReply(comment.id),\n            children: \"Tr\\u1EA3 l\\u1EDDi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), currentUser && currentUser.id !== comment.user_id && /*#__PURE__*/_jsxDEV(ReportButton, {\n            type: \"comment\",\n            id: comment.id,\n            title: `Comment by ${comment.user_name}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), isReplying && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reply-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Vi\\u1EBFt tr\\u1EA3 l\\u1EDDi c\\u1EE7a b\\u1EA1n...\",\n            value: localReplyText,\n            onChange: e => setLocalReplyText(e.target.value),\n            rows: 2,\n            className: \"reply-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"cancel-reply-btn\",\n              onClick: handleCancelReply,\n              children: \"H\\u1EE7y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"submit-reply-btn\",\n              onClick: e => {\n                e.preventDefault(); // Thêm dòng này\n                handleSubmitReply(comment.id, localReplyText);\n              },\n              disabled: !localReplyText.trim(),\n              children: \"Tr\\u1EA3 l\\u1EDDi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"replies-container\",\n          children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(CommentItem, {\n            comment: reply,\n            handleReply: handleReply,\n            replyingTo: replyingTo,\n            handleSubmitReply: handleSubmitReply,\n            handleCancelReply: handleCancelReply,\n            currentUser: currentUser\n          }, reply.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  };\n  _s(CommentItem, \"JdzN30f+cckl/VbZmpfIzRYoUUw=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"B\\xECnh lu\\u1EADn (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Chia s\\u1EBB c\\u1EA3m ngh\\u0129 c\\u1EE7a b\\u1EA1n...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          rows: 3,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-comment-btn\",\n          disabled: !newComment.trim(),\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments-message\",\n        children: \"Ch\\u01B0a c\\xF3 b\\xECnh lu\\u1EADn n\\xE0o. H\\xE3y l\\xE0 ng\\u01B0\\u1EDDi \\u0111\\u1EA7u ti\\xEAn b\\xECnh lu\\u1EADn!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(CommentItem, {\n        comment: comment,\n        handleReply: handleReply,\n        replyingTo: replyingTo,\n        handleSubmitReply: handleSubmitReply,\n        handleCancelReply: handleCancelReply,\n        currentUser: currentUser\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s2(Comments, \"bx+ZoEkYZiMO+k/fgybsdYQRpvA=\", false, function () {\n  return [useNavigate];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","useNavigate","ReportButton","jsxDEV","_jsxDEV","addReplyToComments","comments","parentId","reply","map","comment","id","formattedReply","parent_comment_id","replies","length","Comments","recipeId","_s2","_s","$RefreshSig$","setComments","newComment","setNewComment","loading","setLoading","error","setError","replyingTo","setReplyingTo","replyTexts","setReplyTexts","currentUser","navigate","fetchComments","response","fetch","ok","Error","data","json","err","console","handleSubmitComment","e","preventDefault","trim","token","localStorage","getItem","method","headers","body","JSON","stringify","text","result","prev","errorData","message","alert","handleReply","commentId","handleChangeReplyText","handleSubmitReply","localReplyText","handleCancelReply","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","CommentItem","setLocalReplyText","isReplying","user_picture","src","alt","user_name","onError","target","onerror","encodeURIComponent","toUpperCase","created_at","user_id","type","title","onClick","placeholder","value","onChange","rows","disabled","onSubmit","required","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/components/comment/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Comments.css';\r\nimport ReportButton from '../report/ReportButton';\r\n\r\n// Thêm hàm này vào đây\r\nfunction addReplyToComments(comments, parentId, reply) {\r\n  return comments.map(comment => {\r\n    // Dùng parent_id thay vì parent_comment_id\r\n    if (comment.id === parentId) {\r\n      // Đảm bảo reply có parent_comment_id đúng cho frontend\r\n      const formattedReply = {\r\n        ...reply,\r\n        parent_comment_id: parentId\r\n      };\r\n      return {\r\n        ...comment,\r\n        replies: [...(comment.replies || []), formattedReply]\r\n      };\r\n    } else if (comment.replies && comment.replies.length > 0) {\r\n      return {\r\n        ...comment,\r\n        replies: addReplyToComments(comment.replies, parentId, reply)\r\n      };\r\n    } else {\r\n      return comment;\r\n    }\r\n  });\r\n}\r\n\r\nconst Comments = ({ recipeId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const [replyTexts, setReplyTexts] = useState({});\r\n  const { currentUser } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Thêm hàm fetchComments ra khỏi useEffect để có thể tái sử dụng\r\n  const fetchComments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Không thể tải bình luận');\r\n      }\r\n      \r\n      const data = await response.json();\r\n      setComments(data.data || []);\r\n    } catch (err) {\r\n      console.error('Error fetching comments:', err);\r\n      setError('Không thể tải bình luận. Vui lòng thử lại sau.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [recipeId]);\r\n\r\n  const handleSubmitComment = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    if (!newComment.trim()) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('auth_token');\r\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ text: newComment })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        \r\n        // Thêm comment mới vào danh sách\r\n        if (result.data) {\r\n          setComments(prev => [result.data, ...prev]);\r\n          setNewComment('');\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Không thể đăng bình luận');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error posting comment:', err);\r\n      alert(`Lỗi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleReply = (commentId) => {\r\n    setReplyingTo(commentId);\r\n    setReplyTexts(prev => ({ ...prev, [commentId]: '' }));\r\n  };\r\n\r\n  const handleChangeReplyText = (commentId, text) => {\r\n    setReplyTexts(prev => ({ ...prev, [commentId]: text }));\r\n  };\r\n\r\n  const handleSubmitReply = async (commentId, localReplyText) => {\r\n    if (!localReplyText?.trim()) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('auth_token');\r\n      const response = await fetch(`http://localhost:5000/api/comments/${commentId}/reply`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ text: localReplyText })\r\n      });\r\n      \r\n      // Sau khi gửi reply thành công:\r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        setComments(prev => addReplyToComments(prev, commentId, result.data));\r\n        setReplyingTo(null);\r\n        setReplyTexts(prev => ({ ...prev, [commentId]: '' }));\r\n        \r\n        // Gọi fetchComments để refresh comments từ server\r\n        fetchComments();\r\n      } else {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Không thể trả lời bình luận');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error replying to comment:', err);\r\n      alert(`Lỗi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleCancelReply = () => {\r\n    setReplyingTo(null);\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('vi-VN', options);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"comments-loading\">Đang tải bình luận...</div>;\r\n  }\r\n\r\n  const CommentItem = ({ comment, handleReply, replyingTo, handleSubmitReply, handleCancelReply, currentUser }) => {\r\n    // Mỗi component có state riêng\r\n    const [localReplyText, setLocalReplyText] = useState('');\r\n    \r\n    // Khi component được chọn để reply\r\n    const isReplying = replyingTo === comment.id;\r\n    \r\n    // Reset text khi reply form mới mở\r\n    useEffect(() => {\r\n      if (isReplying) setLocalReplyText('');\r\n    }, [isReplying]);\r\n    \r\n    return (\r\n      <div className=\"comment-item\">\r\n        <div className=\"comment-avatar\">\r\n          {comment.user_picture ? (\r\n            <img \r\n              src={`http://localhost:5000${comment.user_picture}`} \r\n              alt={comment.user_name} \r\n              onError={(e) => {\r\n                e.target.onerror = null;\r\n                e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(comment.user_name)}&background=random`;\r\n              }}\r\n            />\r\n          ) : (\r\n            <div className=\"avatar-placeholder\">\r\n              {comment.user_name ? comment.user_name[0].toUpperCase() : 'U'}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"comment-content\">\r\n          <div className=\"comment-header\">\r\n            <div className=\"comment-author\">{comment.user_name}</div>\r\n            <div className=\"comment-date\">{formatDate(comment.created_at)}</div>\r\n            \r\n            {/* Thêm nút báo cáo chỉ hiển thị khi không phải comment của mình */}\r\n            {currentUser && currentUser.id !== comment.user_id && (\r\n              <ReportButton \r\n                type=\"comment\" \r\n                id={comment.id} \r\n                title={`Comment by ${comment.user_name}`} \r\n              />\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"comment-text\">\r\n            {comment.text}\r\n          </div>\r\n          \r\n          <div className=\"comment-actions\">\r\n            <button \r\n              className=\"reply-button\" \r\n              onClick={() => handleReply(comment.id)}\r\n            >\r\n              Trả lời\r\n            </button>\r\n            \r\n            {/* Thêm chức năng báo cáo comment nếu không phải người viết comment */}\r\n            {currentUser && currentUser.id !== comment.user_id && (\r\n              <ReportButton \r\n                  type=\"comment\" \r\n                  id={comment.id} \r\n                  title={`Comment by ${comment.user_name}`} \r\n              />\r\n            )}\r\n          </div>\r\n          \r\n          {isReplying && (\r\n            <div className=\"reply-form-container\">\r\n              <textarea\r\n                placeholder=\"Viết trả lời của bạn...\"\r\n                value={localReplyText}\r\n                onChange={(e) => setLocalReplyText(e.target.value)}\r\n                rows={2}\r\n                className=\"reply-textarea\"\r\n              />\r\n              <div className=\"reply-actions\">\r\n                <button \r\n                  className=\"cancel-reply-btn\"\r\n                  onClick={handleCancelReply}\r\n                >\r\n                  Hủy\r\n                </button>\r\n                <button \r\n                  className=\"submit-reply-btn\"\r\n                  onClick={(e) => {\r\n                    e.preventDefault(); // Thêm dòng này\r\n                    handleSubmitReply(comment.id, localReplyText);\r\n                  }}\r\n                  disabled={!localReplyText.trim()}\r\n                >\r\n                  Trả lời\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {/* Đệ quy render replies */}\r\n          {comment.replies && comment.replies.length > 0 && (\r\n            <div className=\"replies-container\">\r\n              {comment.replies.map(reply => (\r\n                <CommentItem\r\n                  key={reply.id}\r\n                  comment={reply}\r\n                  handleReply={handleReply}\r\n                  replyingTo={replyingTo}\r\n                  handleSubmitReply={handleSubmitReply}\r\n                  handleCancelReply={handleCancelReply}\r\n                  currentUser={currentUser}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h3>Bình luận ({comments.length})</h3>\r\n      \r\n      <div className=\"comment-form-container\">\r\n        <form onSubmit={handleSubmitComment} className=\"comment-form\">\r\n          <textarea\r\n            placeholder=\"Chia sẻ cảm nghĩ của bạn...\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            rows={3}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"submit-comment-btn\" disabled={!newComment.trim()}>\r\n            Gửi\r\n          </button>\r\n        </form>\r\n      </div>\r\n      \r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      \r\n      <div className=\"comments-list\">\r\n        {comments.length === 0 ? (\r\n          <p className=\"no-comments-message\">Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <CommentItem\r\n              key={comment.id}\r\n              comment={comment}\r\n              handleReply={handleReply}\r\n              replyingTo={replyingTo}\r\n              handleSubmitReply={handleSubmitReply}\r\n              handleCancelReply={handleCancelReply}\r\n              currentUser={currentUser}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}