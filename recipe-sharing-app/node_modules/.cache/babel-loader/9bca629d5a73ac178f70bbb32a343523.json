{"ast":null,"code":"import api from './api';\nconst userService = {\n  register: async userData => {\n    try {\n      const response = await api.post('/users/register', userData);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  login: async credentials => {\n    try {\n      const response = await api.post('/users/login', credentials);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  getUserProfile: async userId => {\n    try {\n      const response = await api.get(`/users/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  updateUserProfile: async (userId, updatedData) => {\n    try {\n      const response = await api.put(`/users/${userId}`, updatedData);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  },\n  deleteUser: async userId => {\n    try {\n      const response = await api.delete(`/users/${userId}`);\n      return response.data;\n    } catch (error) {\n      throw error.response.data;\n    }\n  }\n};\nexport default userService;","map":{"version":3,"names":["api","userService","register","userData","response","post","data","error","login","credentials","getUserProfile","userId","get","updateUserProfile","updatedData","put","deleteUser","delete"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/userService.js"],"sourcesContent":["import api from './api';\n\nconst userService = {\n    register: async (userData) => {\n        try {\n            const response = await api.post('/users/register', userData);\n            return response.data;\n        } catch (error) {\n            throw error.response.data;\n        }\n    },\n\n    login: async (credentials) => {\n        try {\n            const response = await api.post('/users/login', credentials);\n            return response.data;\n        } catch (error) {\n            throw error.response.data;\n        }\n    },\n\n    getUserProfile: async (userId) => {\n        try {\n            const response = await api.get(`/users/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw error.response.data;\n        }\n    },\n\n    updateUserProfile: async (userId, updatedData) => {\n        try {\n            const response = await api.put(`/users/${userId}`, updatedData);\n            return response.data;\n        } catch (error) {\n            throw error.response.data;\n        }\n    },\n\n    deleteUser: async (userId) => {\n        try {\n            const response = await api.delete(`/users/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw error.response.data;\n        }\n    }\n};\n\nexport default userService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAChBC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MAC5D,OAAOC,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC7B;EACJ,CAAC;EAEDE,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC1B,IAAI;MACA,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,cAAc,EAAEI,WAAW,CAAC;MAC5D,OAAOL,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC7B;EACJ,CAAC;EAEDI,cAAc,EAAE,MAAOC,MAAM,IAAK;IAC9B,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACY,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAC;MAClD,OAAOP,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC7B;EACJ,CAAC;EAEDO,iBAAiB,EAAE,MAAAA,CAAOF,MAAM,EAAEG,WAAW,KAAK;IAC9C,IAAI;MACA,MAAMV,QAAQ,GAAG,MAAMJ,GAAG,CAACe,GAAG,CAAC,UAAUJ,MAAM,EAAE,EAAEG,WAAW,CAAC;MAC/D,OAAOV,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC7B;EACJ,CAAC;EAEDU,UAAU,EAAE,MAAOL,MAAM,IAAK;IAC1B,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACiB,MAAM,CAAC,UAAUN,MAAM,EAAE,CAAC;MACrD,OAAOP,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;IAC7B;EACJ;AACJ,CAAC;AAED,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}