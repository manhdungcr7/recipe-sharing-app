{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\components\\\\recipe\\\\RecipeCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecipeCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeCard = ({\n  recipe\n}) => {\n  _s();\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  // Tạo URL hình ảnh đầy đủ\n  const getImageUrl = () => {\n    if (!recipe || !recipe.image_url) {\n      return null;\n    }\n\n    // Nếu đã là URL đầy đủ\n    if (recipe.image_url.startsWith('http')) {\n      return recipe.image_url;\n    }\n\n    // Thêm domain vào đường dẫn tương đối\n    return `http://localhost:5000${recipe.image_url}`;\n  };\n\n  // Tạo màu nền cho placeholder\n  const getBackgroundColor = () => {\n    // Sử dụng ID làm seed để có màu ổn định cho mỗi recipe\n    const hash = recipe.id || Math.floor(Math.random() * 360);\n    const hue = hash * 137.5 % 360;\n    return `hsl(${hue}, 70%, 80%)`;\n  };\n  useEffect(() => {\n    // Log URL để debug\n    console.log(`Recipe ${recipe.id} (${recipe.title}) image URL:`, getImageUrl());\n\n    // Reset state khi recipe thay đổi\n    setImageLoaded(false);\n    setImageError(false);\n\n    // Preload image\n    if (getImageUrl()) {\n      const img = new Image();\n      img.onload = () => setImageLoaded(true);\n      img.onerror = () => {\n        console.error(`Failed to load image for recipe: ${recipe.title}`);\n        setImageError(true);\n      };\n      img.src = getImageUrl();\n    } else {\n      setImageError(true);\n    }\n  }, [recipe.id, recipe.image_url]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-card\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/recipe/${recipe.id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-image-container\",\n        children: [!imageError && getImageUrl() ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getImageUrl(),\n          alt: recipe.title,\n          style: {\n            display: imageLoaded ? 'block' : 'none'\n          },\n          onLoad: () => setImageLoaded(true),\n          onError: () => {\n            console.error(`Error loading image for recipe: ${recipe.title}`);\n            setImageError(true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : null, (!imageLoaded || imageError) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-image-placeholder\",\n          style: {\n            backgroundColor: getBackgroundColor(),\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: '100%',\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"placeholder-text\",\n            children: recipe.title.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [recipe.cookingTime || 0, \" ph\\xFAt\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeCard, \"lem3T0z5jBizamUrgG8nEKRUGXg=\");\n_c = RecipeCard;\nexport default RecipeCard;\nvar _c;\n$RefreshReg$(_c, \"RecipeCard\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","RecipeCard","recipe","_s","imageLoaded","setImageLoaded","imageError","setImageError","getImageUrl","image_url","startsWith","getBackgroundColor","hash","id","Math","floor","random","hue","console","log","title","img","Image","onload","onerror","error","src","className","children","to","alt","style","display","onLoad","onError","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","alignItems","justifyContent","width","height","charAt","toUpperCase","cookingTime","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/components/recipe/RecipeCard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './RecipeCard.css';\n\nconst RecipeCard = ({ recipe }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  // Tạo URL hình ảnh đầy đủ\n  const getImageUrl = () => {\n    if (!recipe || !recipe.image_url) {\n      return null;\n    }\n    \n    // Nếu đã là URL đầy đủ\n    if (recipe.image_url.startsWith('http')) {\n      return recipe.image_url;\n    }\n    \n    // Thêm domain vào đường dẫn tương đối\n    return `http://localhost:5000${recipe.image_url}`;\n  };\n\n  // Tạo màu nền cho placeholder\n  const getBackgroundColor = () => {\n    // Sử dụng ID làm seed để có màu ổn định cho mỗi recipe\n    const hash = recipe.id || Math.floor(Math.random() * 360);\n    const hue = (hash * 137.5) % 360;\n    return `hsl(${hue}, 70%, 80%)`;\n  };\n\n  useEffect(() => {\n    // Log URL để debug\n    console.log(`Recipe ${recipe.id} (${recipe.title}) image URL:`, getImageUrl());\n    \n    // Reset state khi recipe thay đổi\n    setImageLoaded(false);\n    setImageError(false);\n    \n    // Preload image\n    if (getImageUrl()) {\n      const img = new Image();\n      img.onload = () => setImageLoaded(true);\n      img.onerror = () => {\n        console.error(`Failed to load image for recipe: ${recipe.title}`);\n        setImageError(true);\n      };\n      img.src = getImageUrl();\n    } else {\n      setImageError(true);\n    }\n  }, [recipe.id, recipe.image_url]);\n\n  return (\n    <div className=\"recipe-card\">\n      <Link to={`/recipe/${recipe.id}`}>\n        <div className=\"recipe-image-container\">\n          {!imageError && getImageUrl() ? (\n            <img\n              src={getImageUrl()}\n              alt={recipe.title}\n              style={{ display: imageLoaded ? 'block' : 'none' }}\n              onLoad={() => setImageLoaded(true)}\n              onError={() => {\n                console.error(`Error loading image for recipe: ${recipe.title}`);\n                setImageError(true);\n              }}\n            />\n          ) : null}\n          \n          {(!imageLoaded || imageError) && (\n            <div \n              className=\"recipe-image-placeholder\"\n              style={{ \n                backgroundColor: getBackgroundColor(),\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width: '100%',\n                height: '100%'\n              }}\n            >\n              <span className=\"placeholder-text\">{recipe.title.charAt(0).toUpperCase()}</span>\n            </div>\n          )}\n        </div>\n        <div className=\"recipe-info\">\n          <h3>{recipe.title}</h3>\n          <p>{recipe.cookingTime || 0} phút</p>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default RecipeCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACN,MAAM,IAAI,CAACA,MAAM,CAACO,SAAS,EAAE;MAChC,OAAO,IAAI;IACb;;IAEA;IACA,IAAIP,MAAM,CAACO,SAAS,CAACC,UAAU,CAAC,MAAM,CAAC,EAAE;MACvC,OAAOR,MAAM,CAACO,SAAS;IACzB;;IAEA;IACA,OAAO,wBAAwBP,MAAM,CAACO,SAAS,EAAE;EACnD,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B;IACA,MAAMC,IAAI,GAAGV,MAAM,CAACW,EAAE,IAAIC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACzD,MAAMC,GAAG,GAAIL,IAAI,GAAG,KAAK,GAAI,GAAG;IAChC,OAAO,OAAOK,GAAG,aAAa;EAChC,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd;IACAqB,OAAO,CAACC,GAAG,CAAC,UAAUjB,MAAM,CAACW,EAAE,KAAKX,MAAM,CAACkB,KAAK,cAAc,EAAEZ,WAAW,CAAC,CAAC,CAAC;;IAE9E;IACAH,cAAc,CAAC,KAAK,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;;IAEpB;IACA,IAAIC,WAAW,CAAC,CAAC,EAAE;MACjB,MAAMa,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAMlB,cAAc,CAAC,IAAI,CAAC;MACvCgB,GAAG,CAACG,OAAO,GAAG,MAAM;QAClBN,OAAO,CAACO,KAAK,CAAC,oCAAoCvB,MAAM,CAACkB,KAAK,EAAE,CAAC;QACjEb,aAAa,CAAC,IAAI,CAAC;MACrB,CAAC;MACDc,GAAG,CAACK,GAAG,GAAGlB,WAAW,CAAC,CAAC;IACzB,CAAC,MAAM;MACLD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,CAACL,MAAM,CAACW,EAAE,EAAEX,MAAM,CAACO,SAAS,CAAC,CAAC;EAEjC,oBACET,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1B5B,OAAA,CAACF,IAAI;MAAC+B,EAAE,EAAE,WAAW3B,MAAM,CAACW,EAAE,EAAG;MAAAe,QAAA,gBAC/B5B,OAAA;QAAK2B,SAAS,EAAC,wBAAwB;QAAAC,QAAA,GACpC,CAACtB,UAAU,IAAIE,WAAW,CAAC,CAAC,gBAC3BR,OAAA;UACE0B,GAAG,EAAElB,WAAW,CAAC,CAAE;UACnBsB,GAAG,EAAE5B,MAAM,CAACkB,KAAM;UAClBW,KAAK,EAAE;YAAEC,OAAO,EAAE5B,WAAW,GAAG,OAAO,GAAG;UAAO,CAAE;UACnD6B,MAAM,EAAEA,CAAA,KAAM5B,cAAc,CAAC,IAAI,CAAE;UACnC6B,OAAO,EAAEA,CAAA,KAAM;YACbhB,OAAO,CAACO,KAAK,CAAC,mCAAmCvB,MAAM,CAACkB,KAAK,EAAE,CAAC;YAChEb,aAAa,CAAC,IAAI,CAAC;UACrB;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,GACA,IAAI,EAEP,CAAC,CAAClC,WAAW,IAAIE,UAAU,kBAC1BN,OAAA;UACE2B,SAAS,EAAC,0BAA0B;UACpCI,KAAK,EAAE;YACLQ,eAAe,EAAE5B,kBAAkB,CAAC,CAAC;YACrCqB,OAAO,EAAE,MAAM;YACfQ,UAAU,EAAE,QAAQ;YACpBC,cAAc,EAAE,QAAQ;YACxBC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE;UACV,CAAE;UAAAf,QAAA,eAEF5B,OAAA;YAAM2B,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAE1B,MAAM,CAACkB,KAAK,CAACwB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;UAAC;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNtC,OAAA;QAAK2B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B5B,OAAA;UAAA4B,QAAA,EAAK1B,MAAM,CAACkB;QAAK;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBtC,OAAA;UAAA4B,QAAA,GAAI1B,MAAM,CAAC4C,WAAW,IAAI,CAAC,EAAC,UAAK;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACnC,EAAA,CAzFIF,UAAU;AAAA8C,EAAA,GAAV9C,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}