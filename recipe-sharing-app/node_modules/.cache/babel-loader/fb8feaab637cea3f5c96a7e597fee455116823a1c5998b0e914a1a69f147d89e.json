{"ast":null,"code":"const setupFetchInterceptor = () => {\n  const originalFetch = window.fetch;\n  window.fetch = async function (url, options = {}) {\n    // Nếu là request API, thêm token vào header\n    if (url.includes('http://localhost:5000/api')) {\n      const token = localStorage.getItem('token');\n      if (token) {\n        options.headers = {\n          ...options.headers,\n          'Authorization': `Bearer ${token}`\n        };\n      }\n    }\n    try {\n      const response = await originalFetch(url, options);\n\n      // Kiểm tra response\n      if (response.status === 401) {\n        // Token không hợp lệ hoặc hết hạn\n        console.warn('Authentication failed. Logging out...');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        localStorage.removeItem('auth_token');\n\n        // Chuyển hướng đến trang đăng nhập nếu không phải đang ở đó\n        if (!window.location.pathname.includes('/login')) {\n          window.location.href = '/login';\n        }\n      }\n      return response;\n    } catch (error) {\n      console.error('Fetch error:', error);\n      throw error;\n    }\n  };\n};\nexport default setupFetchInterceptor;","map":{"version":3,"names":["setupFetchInterceptor","originalFetch","window","fetch","url","options","includes","token","localStorage","getItem","headers","response","status","console","warn","removeItem","location","pathname","href","error"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/utils/fetchInterceptor.js"],"sourcesContent":["const setupFetchInterceptor = () => {\r\n  const originalFetch = window.fetch;\r\n  \r\n  window.fetch = async function(url, options = {}) {\r\n    // Nếu là request API, thêm token vào header\r\n    if (url.includes('http://localhost:5000/api')) {\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (token) {\r\n        options.headers = {\r\n          ...options.headers,\r\n          'Authorization': `Bearer ${token}`\r\n        };\r\n      }\r\n    }\r\n    \r\n    try {\r\n      const response = await originalFetch(url, options);\r\n      \r\n      // Kiểm tra response\r\n      if (response.status === 401) {\r\n        // Token không hợp lệ hoặc hết hạn\r\n        console.warn('Authentication failed. Logging out...');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        localStorage.removeItem('auth_token');\r\n        \r\n        // Chuyển hướng đến trang đăng nhập nếu không phải đang ở đó\r\n        if (!window.location.pathname.includes('/login')) {\r\n          window.location.href = '/login';\r\n        }\r\n      }\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('Fetch error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport default setupFetchInterceptor;"],"mappings":"AAAA,MAAMA,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,aAAa,GAAGC,MAAM,CAACC,KAAK;EAElCD,MAAM,CAACC,KAAK,GAAG,gBAAeC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/C;IACA,IAAID,GAAG,CAACE,QAAQ,CAAC,2BAA2B,CAAC,EAAE;MAC7C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,IAAIF,KAAK,EAAE;QACTF,OAAO,CAACK,OAAO,GAAG;UAChB,GAAGL,OAAO,CAACK,OAAO;UAClB,eAAe,EAAE,UAAUH,KAAK;QAClC,CAAC;MACH;IACF;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMV,aAAa,CAACG,GAAG,EAAEC,OAAO,CAAC;;MAElD;MACA,IAAIM,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;QACrDN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;QAC/BP,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;;QAErC;QACA,IAAI,CAACb,MAAM,CAACc,QAAQ,CAACC,QAAQ,CAACX,QAAQ,CAAC,QAAQ,CAAC,EAAE;UAChDJ,MAAM,CAACc,QAAQ,CAACE,IAAI,GAAG,QAAQ;QACjC;MACF;MAEA,OAAOP,QAAQ;IACjB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdN,OAAO,CAACM,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,MAAMA,KAAK;IACb;EACF,CAAC;AACH,CAAC;AAED,eAAenB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}