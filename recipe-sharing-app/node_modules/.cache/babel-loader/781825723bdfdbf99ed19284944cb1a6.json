{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// Tạo instance axios với cấu hình mặc định\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Thêm interceptors để xử lý token authentication\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Xử lý response và error global\napi.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  // Nếu lỗi là 401 (Unauthorized), thử lại với token mới\n  if (error.response && error.response.status === 401) {\n    // Thông báo chi tiết hơn cho người dùng\n    console.error(\"Authentication error:\", error.response.data);\n\n    // Lưu URL hiện tại trước khi chuyển hướng\n    localStorage.setItem('redirectAfterLogin', window.location.pathname);\n\n    // Kiểm tra có phải là lỗi token hết hạn không\n    const errorMessage = error.response.data.message;\n    if (errorMessage.includes('hết hạn') || errorMessage.includes('không hợp lệ')) {\n      alert('Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.');\n\n      // Xóa token cũ\n      localStorage.removeItem('auth_token');\n      localStorage.removeItem('user');\n\n      // Điều hướng đến trang đăng nhập\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Example API calls\nexport const fetchRecipes = async () => {\n  const response = await api.get('/recipes');\n  return response.data;\n};\nexport const fetchRecipeById = async id => {\n  const response = await api.get(`/recipes/${id}`);\n  return response.data;\n};\nexport const createRecipe = async recipeData => {\n  const response = await api.post('/recipes', recipeData);\n  return response.data;\n};\nexport const updateRecipe = async (id, recipeData) => {\n  const response = await api.put(`/recipes/${id}`, recipeData);\n  return response.data;\n};\nexport const deleteRecipe = async id => {\n  const response = await api.delete(`/recipes/${id}`);\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","status","console","data","setItem","window","location","pathname","errorMessage","message","includes","alert","removeItem","href","fetchRecipes","get","fetchRecipeById","id","createRecipe","recipeData","post","updateRecipe","put","deleteRecipe","delete"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000/api';\n\n// Tạo instance axios với cấu hình mặc định\nconst api = axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Thêm interceptors để xử lý token authentication\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('auth_token');\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\n// Xử lý response và error global\napi.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    async (error) => {\n        // Nếu lỗi là 401 (Unauthorized), thử lại với token mới\n        if (error.response && error.response.status === 401) {\n            // Thông báo chi tiết hơn cho người dùng\n            console.error(\"Authentication error:\", error.response.data);\n            \n            // Lưu URL hiện tại trước khi chuyển hướng\n            localStorage.setItem('redirectAfterLogin', window.location.pathname);\n            \n            // Kiểm tra có phải là lỗi token hết hạn không\n            const errorMessage = error.response.data.message;\n            if (errorMessage.includes('hết hạn') || errorMessage.includes('không hợp lệ')) {\n                alert('Phiên đăng nhập đã hết hạn. Vui lòng đăng nhập lại.');\n                \n                // Xóa token cũ\n                localStorage.removeItem('auth_token');\n                localStorage.removeItem('user');\n                \n                // Điều hướng đến trang đăng nhập\n                window.location.href = '/login';\n            }\n        }\n        return Promise.reject(error);\n    }\n);\n\n// Example API calls\nexport const fetchRecipes = async () => {\n    const response = await api.get('/recipes');\n    return response.data;\n};\n\nexport const fetchRecipeById = async (id) => {\n    const response = await api.get(`/recipes/${id}`);\n    return response.data;\n};\n\nexport const createRecipe = async (recipeData) => {\n    const response = await api.post('/recipes', recipeData);\n    return response.data;\n};\n\nexport const updateRecipe = async (id, recipeData) => {\n    const response = await api.put(`/recipes/${id}`, recipeData);\n    return response.data;\n};\n\nexport const deleteRecipe = async (id) => {\n    const response = await api.delete(`/recipes/${id}`);\n    return response.data;\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}