{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\components\\\\comment\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport './Comments.css';\nimport ReportButton from '../report/ReportButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = ({\n  recipeId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [replyingTo, setReplyingTo] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`);\n        if (!response.ok) {\n          throw new Error('Không thể tải bình luận');\n        }\n        const data = await response.json();\n        setComments(data.data || []);\n      } catch (err) {\n        console.error('Error fetching comments:', err);\n        setError('Không thể tải bình luận. Vui lòng thử lại sau.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [recipeId]);\n  const handleSubmitComment = async e => {\n    e.preventDefault();\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    if (!newComment.trim()) return;\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          text: newComment\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Thêm comment mới vào danh sách\n        if (result.data) {\n          setComments(prev => [result.data, ...prev]);\n          setNewComment('');\n        }\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Không thể đăng bình luận');\n      }\n    } catch (err) {\n      console.error('Error posting comment:', err);\n      alert(`Lỗi: ${err.message}`);\n    }\n  };\n  const handleReply = commentId => {\n    setReplyingTo(commentId);\n    setReplyText('');\n  };\n  const handleCancelReply = () => {\n    setReplyingTo(null);\n    setReplyText('');\n  };\n  const handleSubmitReply = async commentId => {\n    if (!currentUser) {\n      navigate('/login');\n      return;\n    }\n    if (!replyText.trim()) return;\n    try {\n      const token = localStorage.getItem('auth_token');\n      const response = await fetch(`http://localhost:5000/api/comments/${commentId}/reply`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          text: replyText\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n\n        // Cập nhật danh sách bình luận\n        setComments(prev => prev.map(comment => comment.id === commentId ? {\n          ...comment,\n          replies: [...(comment.replies || []), result.data]\n        } : comment));\n        setReplyingTo(null);\n        setReplyText('');\n      } else {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Không thể trả lời bình luận');\n      }\n    } catch (err) {\n      console.error('Error replying to comment:', err);\n      alert(`Lỗi: ${err.message}`);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString('vi-VN', options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-loading\",\n      children: \"\\u0110ang t\\u1EA3i b\\xECnh lu\\u1EADn...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"B\\xECnh lu\\u1EADn (\", comments.length, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitComment,\n        className: \"comment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Chia s\\u1EBB c\\u1EA3m ngh\\u0129 c\\u1EE7a b\\u1EA1n...\",\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          rows: 3,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-comment-btn\",\n          disabled: !newComment.trim(),\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-list\",\n      children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments-message\",\n        children: \"Ch\\u01B0a c\\xF3 b\\xECnh lu\\u1EADn n\\xE0o. H\\xE3y l\\xE0 ng\\u01B0\\u1EDDi \\u0111\\u1EA7u ti\\xEAn b\\xECnh lu\\u1EADn!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this) : comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-avatar\",\n          children: comment.user_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:5000${comment.user_picture}`,\n            alt: comment.user_name,\n            onError: e => {\n              e.target.onerror = null;\n              e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(comment.user_name)}&background=random`;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-placeholder\",\n            children: comment.user_name ? comment.user_name[0].toUpperCase() : 'U'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-author\",\n              children: comment.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-date\",\n              children: formatDate(comment.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), currentUser && currentUser.id !== comment.user_id && /*#__PURE__*/_jsxDEV(ReportButton, {\n              type: \"comment\",\n              id: comment.id,\n              title: `Comment by ${comment.user_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-text\",\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reply-button\",\n              onClick: () => handleReply(comment.id),\n              children: \"Tr\\u1EA3 l\\u1EDDi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), currentUser && currentUser.id !== comment.user_id && /*#__PURE__*/_jsxDEV(ReportButton, {\n              type: \"comment\",\n              id: comment.id,\n              title: `Comment by ${comment.user_name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this), replyingTo === comment.id && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reply-form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Vi\\u1EBFt tr\\u1EA3 l\\u1EDDi c\\u1EE7a b\\u1EA1n...\",\n              value: replyText,\n              onChange: e => setReplyText(e.target.value),\n              rows: 2,\n              className: \"reply-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"cancel-reply-btn\",\n                onClick: handleCancelReply,\n                children: \"H\\u1EE7y\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"submit-reply-btn\",\n                onClick: () => handleSubmitReply(comment.id),\n                disabled: !replyText.trim(),\n                children: \"Tr\\u1EA3 l\\u1EDDi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 19\n          }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"replies-container\",\n            children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reply-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-avatar\",\n                children: reply.user_picture ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:5000${reply.user_picture}`,\n                  alt: reply.user_name,\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(reply.user_name)}&background=random`;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"avatar-placeholder small\",\n                  children: reply.user_name ? reply.user_name[0].toUpperCase() : 'U'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reply-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-author\",\n                    children: reply.user_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reply-date\",\n                    children: formatDate(reply.created_at)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"reply-text\",\n                  children: reply.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this)]\n            }, reply.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"FWgN4X556QLZDyCQ44WTSezcyAA=\", false, function () {\n  return [useNavigate];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","useNavigate","ReportButton","jsxDEV","_jsxDEV","Comments","recipeId","_s","comments","setComments","newComment","setNewComment","loading","setLoading","error","setError","replyingTo","setReplyingTo","replyText","setReplyText","currentUser","navigate","fetchComments","response","fetch","ok","Error","data","json","err","console","handleSubmitComment","e","preventDefault","trim","token","localStorage","getItem","method","headers","body","JSON","stringify","text","result","prev","errorData","message","alert","handleReply","commentId","handleCancelReply","handleSubmitReply","map","comment","id","replies","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onSubmit","placeholder","value","onChange","target","rows","required","type","disabled","user_picture","src","alt","user_name","onError","onerror","encodeURIComponent","toUpperCase","created_at","user_id","title","onClick","reply","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/components/comment/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Comments.css';\r\nimport ReportButton from '../report/ReportButton';\r\n\r\nconst Comments = ({ recipeId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [replyingTo, setReplyingTo] = useState(null);\r\n  const [replyText, setReplyText] = useState('');\r\n  const { currentUser } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Không thể tải bình luận');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setComments(data.data || []);\r\n      } catch (err) {\r\n        console.error('Error fetching comments:', err);\r\n        setError('Không thể tải bình luận. Vui lòng thử lại sau.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchComments();\r\n  }, [recipeId]);\r\n\r\n  const handleSubmitComment = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!currentUser) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    if (!newComment.trim()) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('auth_token');\r\n      const response = await fetch(`http://localhost:5000/api/comments/recipe/${recipeId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ text: newComment })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        \r\n        // Thêm comment mới vào danh sách\r\n        if (result.data) {\r\n          setComments(prev => [result.data, ...prev]);\r\n          setNewComment('');\r\n        }\r\n      } else {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Không thể đăng bình luận');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error posting comment:', err);\r\n      alert(`Lỗi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const handleReply = (commentId) => {\r\n    setReplyingTo(commentId);\r\n    setReplyText('');\r\n  };\r\n\r\n  const handleCancelReply = () => {\r\n    setReplyingTo(null);\r\n    setReplyText('');\r\n  };\r\n\r\n  const handleSubmitReply = async (commentId) => {\r\n    if (!currentUser) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    \r\n    if (!replyText.trim()) return;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('auth_token');\r\n      const response = await fetch(`http://localhost:5000/api/comments/${commentId}/reply`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ text: replyText })\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const result = await response.json();\r\n        \r\n        // Cập nhật danh sách bình luận\r\n        setComments(prev => prev.map(comment => \r\n          comment.id === commentId \r\n            ? { ...comment, replies: [...(comment.replies || []), result.data] }\r\n            : comment\r\n        ));\r\n        \r\n        setReplyingTo(null);\r\n        setReplyText('');\r\n      } else {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Không thể trả lời bình luận');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error replying to comment:', err);\r\n      alert(`Lỗi: ${err.message}`);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString('vi-VN', options);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"comments-loading\">Đang tải bình luận...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h3>Bình luận ({comments.length})</h3>\r\n      \r\n      <div className=\"comment-form-container\">\r\n        <form onSubmit={handleSubmitComment} className=\"comment-form\">\r\n          <textarea\r\n            placeholder=\"Chia sẻ cảm nghĩ của bạn...\"\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            rows={3}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"submit-comment-btn\" disabled={!newComment.trim()}>\r\n            Gửi\r\n          </button>\r\n        </form>\r\n      </div>\r\n      \r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      \r\n      <div className=\"comments-list\">\r\n        {comments.length === 0 ? (\r\n          <p className=\"no-comments-message\">Chưa có bình luận nào. Hãy là người đầu tiên bình luận!</p>\r\n        ) : (\r\n          comments.map(comment => (\r\n            <div key={comment.id} className=\"comment-item\">\r\n              <div className=\"comment-avatar\">\r\n                {comment.user_picture ? (\r\n                  <img \r\n                    src={`http://localhost:5000${comment.user_picture}`} \r\n                    alt={comment.user_name} \r\n                    onError={(e) => {\r\n                      e.target.onerror = null;\r\n                      e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(comment.user_name)}&background=random`;\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"avatar-placeholder\">\r\n                    {comment.user_name ? comment.user_name[0].toUpperCase() : 'U'}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"comment-content\">\r\n                <div className=\"comment-header\">\r\n                  <div className=\"comment-author\">{comment.user_name}</div>\r\n                  <div className=\"comment-date\">{formatDate(comment.created_at)}</div>\r\n                  \r\n                  {/* Thêm nút báo cáo chỉ hiển thị khi không phải comment của mình */}\r\n                  {currentUser && currentUser.id !== comment.user_id && (\r\n                    <ReportButton \r\n                      type=\"comment\" \r\n                      id={comment.id} \r\n                      title={`Comment by ${comment.user_name}`} \r\n                    />\r\n                  )}\r\n                </div>\r\n                \r\n                <div className=\"comment-text\">\r\n                  {comment.text}\r\n                </div>\r\n                \r\n                <div className=\"comment-actions\">\r\n                  <button \r\n                    className=\"reply-button\" \r\n                    onClick={() => handleReply(comment.id)}\r\n                  >\r\n                    Trả lời\r\n                  </button>\r\n                  \r\n                  {/* Thêm chức năng báo cáo comment nếu không phải người viết comment */}\r\n                  {currentUser && currentUser.id !== comment.user_id && (\r\n                    <ReportButton \r\n                        type=\"comment\" \r\n                        id={comment.id} \r\n                        title={`Comment by ${comment.user_name}`} \r\n                    />\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Reply form */}\r\n                {replyingTo === comment.id && (\r\n                  <div className=\"reply-form-container\">\r\n                    <textarea\r\n                      placeholder=\"Viết trả lời của bạn...\"\r\n                      value={replyText}\r\n                      onChange={(e) => setReplyText(e.target.value)}\r\n                      rows={2}\r\n                      className=\"reply-textarea\"\r\n                    />\r\n                    <div className=\"reply-actions\">\r\n                      <button \r\n                        className=\"cancel-reply-btn\"\r\n                        onClick={handleCancelReply}\r\n                      >\r\n                        Hủy\r\n                      </button>\r\n                      <button \r\n                        className=\"submit-reply-btn\"\r\n                        onClick={() => handleSubmitReply(comment.id)}\r\n                        disabled={!replyText.trim()}\r\n                      >\r\n                        Trả lời\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {/* Replies */}\r\n                {comment.replies && comment.replies.length > 0 && (\r\n                  <div className=\"replies-container\">\r\n                    {comment.replies.map(reply => (\r\n                      <div key={reply.id} className=\"reply-item\">\r\n                        <div className=\"reply-avatar\">\r\n                          {reply.user_picture ? (\r\n                            <img \r\n                              src={`http://localhost:5000${reply.user_picture}`} \r\n                              alt={reply.user_name} \r\n                              onError={(e) => {\r\n                                e.target.onerror = null;\r\n                                e.target.src = `https://ui-avatars.com/api/?name=${encodeURIComponent(reply.user_name)}&background=random`;\r\n                              }}\r\n                            />\r\n                          ) : (\r\n                            <div className=\"avatar-placeholder small\">\r\n                              {reply.user_name ? reply.user_name[0].toUpperCase() : 'U'}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        <div className=\"reply-content\">\r\n                          <div className=\"reply-header\">\r\n                            <div className=\"reply-author\">{reply.user_name}</div>\r\n                            <div className=\"reply-date\">{formatDate(reply.created_at)}</div>\r\n                          </div>\r\n                          \r\n                          <div className=\"reply-text\">\r\n                            {reply.text}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}