{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\context\\\\ChatbotContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatbotContext = /*#__PURE__*/createContext();\nexport const ChatbotProvider = ({\n  children\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const sendMessage = message => {\n    setMessages(prevMessages => [...prevMessages, {\n      text: message,\n      sender: 'user'\n    }]);\n    setLoading(true);\n    // Simulate a response from the chatbot\n    setTimeout(() => {\n      setMessages(prevMessages => [...prevMessages, {\n        text: 'Chatbot response',\n        sender: 'bot'\n      }]);\n      setLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatbotContext.Provider, {\n    value: {\n      messages,\n      loading,\n      sendMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotProvider, \"hq4AwCU/cjqbSZgH8tz5GrloLy8=\");\n_c = ChatbotProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatbotProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","ChatbotContext","ChatbotProvider","children","_s","messages","setMessages","loading","setLoading","sendMessage","message","prevMessages","text","sender","setTimeout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/context/ChatbotContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const ChatbotContext = createContext();\n\nexport const ChatbotProvider = ({ children }) => {\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const sendMessage = (message) => {\n        setMessages((prevMessages) => [...prevMessages, { text: message, sender: 'user' }]);\n        setLoading(true);\n        // Simulate a response from the chatbot\n        setTimeout(() => {\n            setMessages((prevMessages) => [...prevMessages, { text: 'Chatbot response', sender: 'bot' }]);\n            setLoading(false);\n        }, 1000);\n    };\n\n    return (\n        <ChatbotContext.Provider value={{ messages, loading, sendMessage }}>\n            {children}\n        </ChatbotContext.Provider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,cAAc,gBAAGJ,aAAa,CAAC,CAAC;AAE7C,OAAO,MAAMK,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,WAAW,GAAIC,OAAO,IAAK;IAC7BJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;MAAEC,IAAI,EAAEF,OAAO;MAAEG,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IACnFL,UAAU,CAAC,IAAI,CAAC;IAChB;IACAM,UAAU,CAAC,MAAM;MACbR,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,kBAAkB;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;MAC7FL,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,oBACIR,OAAA,CAACC,cAAc,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,QAAQ;MAAEE,OAAO;MAAEE;IAAY,CAAE;IAAAN,QAAA,EAC9DA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC,CAAC;AAAChB,EAAA,CAnBWF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}