{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\web_SE\\\\recipe-sharing-app\\\\src\\\\components\\\\chatbot\\\\ChatbotModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { askChatbot } from '../../services/chatbotService';\nimport ChatMessage from './ChatMessage';\nimport './ChatbotModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatbotModal = ({\n  recipeId,\n  recipeTitle,\n  onClose\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Khi component được mount, hiển thị tin nhắn chào mừng\n  useEffect(() => {\n    const welcomeMessage = `Xin chào! Tôi là chatbot trợ giúp về công thức \"${recipeTitle}\". \n        Bạn có thể hỏi tôi về nguyên liệu, các bước thực hiện, hoặc bất kỳ thắc mắc gì liên quan đến món ăn này.`;\n    setMessages([{\n      text: welcomeMessage,\n      isUser: false\n    }]);\n  }, [recipeTitle]);\n\n  // Cuộn xuống cuối cuộc trò chuyện khi có tin nhắn mới\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Xử lý gửi tin nhắn\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = input;\n    setMessages(prev => [...prev, {\n      text: userMessage,\n      isUser: true\n    }]);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await askChatbot(recipeId, userMessage);\n      setTimeout(() => {\n        setMessages(prev => [...prev, {\n          text: response.answer,\n          isUser: false\n        }]);\n        setLoading(false);\n      }, 500); // Thêm chút delay cho tự nhiên\n    } catch (error) {\n      console.error('Error asking chatbot:', error);\n      setMessages(prev => [...prev, {\n        text: 'Xin lỗi, tôi không thể trả lời câu hỏi này lúc này. Vui lòng thử lại sau.',\n        isUser: false\n      }]);\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"H\\u1ECFi v\\u1EC1 c\\xF4ng th\\u1EE9c\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message.text,\n          isUser: message.isUser\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dot-typing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chatbot-input-form\",\n        onSubmit: handleSendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Nh\\u1EADp c\\xE2u h\\u1ECFi c\\u1EE7a b\\u1EA1n...\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading || !input.trim(),\n          children: \"G\\u1EEDi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatbotModal, \"P8TQvsKutvUL4QyghR8sx3mPZcI=\");\n_c = ChatbotModal;\nexport default ChatbotModal;\nvar _c;\n$RefreshReg$(_c, \"ChatbotModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","askChatbot","ChatMessage","jsxDEV","_jsxDEV","ChatbotModal","recipeId","recipeTitle","onClose","_s","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","welcomeMessage","text","isUser","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","e","preventDefault","trim","userMessage","prev","response","setTimeout","answer","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","index","ref","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/components/chatbot/ChatbotModal.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { askChatbot } from '../../services/chatbotService';\r\nimport ChatMessage from './ChatMessage';\r\nimport './ChatbotModal.css';\r\n\r\nconst ChatbotModal = ({ recipeId, recipeTitle, onClose }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const messagesEndRef = useRef(null);\r\n    \r\n    // Khi component được mount, hiển thị tin nhắn chào mừng\r\n    useEffect(() => {\r\n        const welcomeMessage = `Xin chào! Tôi là chatbot trợ giúp về công thức \"${recipeTitle}\". \r\n        Bạn có thể hỏi tôi về nguyên liệu, các bước thực hiện, hoặc bất kỳ thắc mắc gì liên quan đến món ăn này.`;\r\n        \r\n        setMessages([{ text: welcomeMessage, isUser: false }]);\r\n    }, [recipeTitle]);\r\n    \r\n    // Cuộn xuống cuối cuộc trò chuyện khi có tin nhắn mới\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, [messages]);\r\n    \r\n    // Xử lý gửi tin nhắn\r\n    const handleSendMessage = async (e) => {\r\n        e.preventDefault();\r\n        if (!input.trim()) return;\r\n        \r\n        const userMessage = input;\r\n        setMessages(prev => [...prev, { text: userMessage, isUser: true }]);\r\n        setInput('');\r\n        setLoading(true);\r\n        \r\n        try {\r\n            const response = await askChatbot(recipeId, userMessage);\r\n            \r\n            setTimeout(() => {\r\n                setMessages(prev => [...prev, { text: response.answer, isUser: false }]);\r\n                setLoading(false);\r\n            }, 500); // Thêm chút delay cho tự nhiên\r\n        } catch (error) {\r\n            console.error('Error asking chatbot:', error);\r\n            setMessages(prev => [...prev, { \r\n                text: 'Xin lỗi, tôi không thể trả lời câu hỏi này lúc này. Vui lòng thử lại sau.', \r\n                isUser: false \r\n            }]);\r\n            setLoading(false);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className=\"chatbot-modal\">\r\n            <div className=\"chatbot-container\">\r\n                <div className=\"chatbot-header\">\r\n                    <h3>Hỏi về công thức</h3>\r\n                    <button className=\"close-button\" onClick={onClose}>&times;</button>\r\n                </div>\r\n                \r\n                <div className=\"chatbot-messages\">\r\n                    {messages.map((message, index) => (\r\n                        <ChatMessage \r\n                            key={index}\r\n                            message={message.text}\r\n                            isUser={message.isUser}\r\n                        />\r\n                    ))}\r\n                    \r\n                    {loading && (\r\n                        <div className=\"loading-indicator\">\r\n                            <div className=\"dot-typing\"></div>\r\n                        </div>\r\n                    )}\r\n                    \r\n                    <div ref={messagesEndRef} />\r\n                </div>\r\n                \r\n                <form className=\"chatbot-input-form\" onSubmit={handleSendMessage}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        placeholder=\"Nhập câu hỏi của bạn...\"\r\n                        disabled={loading}\r\n                    />\r\n                    <button type=\"submit\" disabled={loading || !input.trim()}>\r\n                        Gửi\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatbotModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}