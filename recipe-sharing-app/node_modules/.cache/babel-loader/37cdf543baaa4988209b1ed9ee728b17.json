{"ast":null,"code":"import api from './api';\n\n// Lấy tất cả công thức\nexport const fetchRecipes = async (params = {}) => {\n  try {\n    const queryParams = new URLSearchParams(params).toString();\n    const response = await fetch(`http://localhost:5000/api/recipes?${queryParams}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch recipes');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching recipes:', error);\n    throw error;\n  }\n};\n\n// Lấy chi tiết công thức theo ID\nexport const getRecipeById = async id => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch recipe details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching recipe with id ${id}:`, error);\n    throw error;\n  }\n};\n\n// Thêm công thức mới\nexport const addRecipe = async recipeData => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch('http://localhost:5000/api/recipes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      },\n      body: JSON.stringify(recipeData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to add recipe');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error adding recipe:', error);\n    throw error;\n  }\n};\n\n// Cập nhật công thức\nexport const updateRecipe = async (id, recipeData) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      },\n      body: JSON.stringify(recipeData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update recipe');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating recipe:', error);\n    throw error;\n  }\n};\n\n// Xóa công thức\nexport const deleteRecipe = async id => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to delete recipe');\n    }\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('Error deleting recipe:', error);\n    throw error;\n  }\n};\n\n// Thích công thức\nexport const likeRecipe = async id => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to like recipe');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error liking recipe:', error);\n    throw error;\n  }\n};\n\n// Lưu công thức\nexport const saveRecipe = async id => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/save`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to save recipe');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error saving recipe:', error);\n    throw error;\n  }\n};\n\n// Chia sẻ công thức\nexport const shareRecipe = async id => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/share`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : ''\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to share recipe');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error sharing recipe:', error);\n    throw error;\n  }\n};\n\n// Tìm kiếm công thức\nexport const searchRecipes = async query => {\n  return fetchRecipes({\n    search: query\n  });\n};","map":{"version":3,"names":["api","fetchRecipes","params","queryParams","URLSearchParams","toString","response","fetch","ok","Error","data","json","error","console","getRecipeById","id","token","localStorage","getItem","headers","addRecipe","recipeData","method","body","JSON","stringify","errorData","message","updateRecipe","deleteRecipe","success","likeRecipe","saveRecipe","shareRecipe","searchRecipes","query","search"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/services/recipeService.js"],"sourcesContent":["import api from './api';\n\n// Lấy tất cả công thức\nexport const fetchRecipes = async (params = {}) => {\n  try {\n    const queryParams = new URLSearchParams(params).toString();\n    const response = await fetch(`http://localhost:5000/api/recipes?${queryParams}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch recipes');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching recipes:', error);\n    throw error;\n  }\n};\n\n// Lấy chi tiết công thức theo ID\nexport const getRecipeById = async (id) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to fetch recipe details');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching recipe with id ${id}:`, error);\n    throw error;\n  }\n};\n\n// Thêm công thức mới\nexport const addRecipe = async (recipeData) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch('http://localhost:5000/api/recipes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n      body: JSON.stringify(recipeData),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to add recipe');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error adding recipe:', error);\n    throw error;\n  }\n};\n\n// Cập nhật công thức\nexport const updateRecipe = async (id, recipeData) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n      body: JSON.stringify(recipeData),\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to update recipe');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error updating recipe:', error);\n    throw error;\n  }\n};\n\n// Xóa công thức\nexport const deleteRecipe = async (id) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': token ? `Bearer ${token}` : '',\n      },\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to delete recipe');\n    }\n    \n    return { success: true };\n  } catch (error) {\n    console.error('Error deleting recipe:', error);\n    throw error;\n  }\n};\n\n// Thích công thức\nexport const likeRecipe = async (id) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/like`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      }\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to like recipe');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error liking recipe:', error);\n    throw error;\n  }\n};\n\n// Lưu công thức\nexport const saveRecipe = async (id) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/save`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      }\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to save recipe');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error saving recipe:', error);\n    throw error;\n  }\n};\n\n// Chia sẻ công thức\nexport const shareRecipe = async (id) => {\n  try {\n    const token = localStorage.getItem('auth_token');\n    const response = await fetch(`http://localhost:5000/api/recipes/${id}/share`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': token ? `Bearer ${token}` : '',\n      }\n    });\n    \n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Failed to share recipe');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error sharing recipe:', error);\n    throw error;\n  }\n};\n\n// Tìm kiếm công thức\nexport const searchRecipes = async (query) => {\n  return fetchRecipes({ search: query });\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}