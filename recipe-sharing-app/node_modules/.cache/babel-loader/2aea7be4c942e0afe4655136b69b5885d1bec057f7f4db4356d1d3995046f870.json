{"ast":null,"code":"const setupFetchInterceptor = () => {\n  const originalFetch = window.fetch;\n  window.fetch = async function (url, options = {}) {\n    // Thêm try-catch bao quanh toàn bộ hàm\n    try {\n      // Đảm bảo URL là chuẩn khi gọi API\n      if (url.includes('/api/') && !url.includes('http')) {\n        url = `http://localhost:5000${url}`;\n      }\n\n      // Nếu là request API, thêm token vào header\n      if (url.includes('/api/')) {\n        const token = localStorage.getItem('token');\n        if (token) {\n          options.headers = {\n            ...options.headers,\n            'Authorization': `Bearer ${token}`\n          };\n        }\n      }\n      try {\n        const response = await originalFetch(url, options);\n\n        // Kiểm tra response\n        if (response.status === 401) {\n          console.warn('Authentication failed. Logging out...');\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n\n          // Chuyển hướng đến trang đăng nhập nếu không phải đang ở đó\n          if (!window.location.pathname.includes('/login')) {\n            window.location.href = '/login';\n          }\n        }\n        return response;\n      } catch (fetchError) {\n        console.error('Fetch error:', fetchError);\n        // Log thông tin chi tiết\n        console.log('URL attempted:', url);\n        console.log('Options:', JSON.stringify(options));\n        throw fetchError;\n      }\n    } catch (error) {\n      console.error('Fetch interceptor error:', error);\n      throw error;\n    }\n  };\n};\nexport default setupFetchInterceptor;","map":{"version":3,"names":["setupFetchInterceptor","originalFetch","window","fetch","url","options","includes","token","localStorage","getItem","headers","response","status","console","warn","removeItem","location","pathname","href","fetchError","error","log","JSON","stringify"],"sources":["C:/Users/Lenovo/Documents/web_SE/recipe-sharing-app/src/utils/fetchInterceptor.js"],"sourcesContent":["const setupFetchInterceptor = () => {\r\n  const originalFetch = window.fetch;\r\n  \r\n  window.fetch = async function(url, options = {}) {\r\n    // Thêm try-catch bao quanh toàn bộ hàm\r\n    try {\r\n      // Đảm bảo URL là chuẩn khi gọi API\r\n      if (url.includes('/api/') && !url.includes('http')) {\r\n        url = `http://localhost:5000${url}`;\r\n      }\r\n      \r\n      // Nếu là request API, thêm token vào header\r\n      if (url.includes('/api/')) {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (token) {\r\n          options.headers = {\r\n            ...options.headers,\r\n            'Authorization': `Bearer ${token}`\r\n          };\r\n        }\r\n      }\r\n      \r\n      try {\r\n        const response = await originalFetch(url, options);\r\n        \r\n        // Kiểm tra response\r\n        if (response.status === 401) {\r\n          console.warn('Authentication failed. Logging out...');\r\n          localStorage.removeItem('token');\r\n          localStorage.removeItem('user');\r\n          \r\n          // Chuyển hướng đến trang đăng nhập nếu không phải đang ở đó\r\n          if (!window.location.pathname.includes('/login')) {\r\n            window.location.href = '/login';\r\n          }\r\n        }\r\n        \r\n        return response;\r\n      } catch (fetchError) {\r\n        console.error('Fetch error:', fetchError);\r\n        // Log thông tin chi tiết\r\n        console.log('URL attempted:', url);\r\n        console.log('Options:', JSON.stringify(options));\r\n        throw fetchError;\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch interceptor error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n};\r\n\r\nexport default setupFetchInterceptor;"],"mappings":"AAAA,MAAMA,qBAAqB,GAAGA,CAAA,KAAM;EAClC,MAAMC,aAAa,GAAGC,MAAM,CAACC,KAAK;EAElCD,MAAM,CAACC,KAAK,GAAG,gBAAeC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/C;IACA,IAAI;MACF;MACA,IAAID,GAAG,CAACE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACF,GAAG,CAACE,QAAQ,CAAC,MAAM,CAAC,EAAE;QAClDF,GAAG,GAAG,wBAAwBA,GAAG,EAAE;MACrC;;MAEA;MACA,IAAIA,GAAG,CAACE,QAAQ,CAAC,OAAO,CAAC,EAAE;QACzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAE3C,IAAIF,KAAK,EAAE;UACTF,OAAO,CAACK,OAAO,GAAG;YAChB,GAAGL,OAAO,CAACK,OAAO;YAClB,eAAe,EAAE,UAAUH,KAAK;UAClC,CAAC;QACH;MACF;MAEA,IAAI;QACF,MAAMI,QAAQ,GAAG,MAAMV,aAAa,CAACG,GAAG,EAAEC,OAAO,CAAC;;QAElD;QACA,IAAIM,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3BC,OAAO,CAACC,IAAI,CAAC,uCAAuC,CAAC;UACrDN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;UAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;;UAE/B;UACA,IAAI,CAACb,MAAM,CAACc,QAAQ,CAACC,QAAQ,CAACX,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAChDJ,MAAM,CAACc,QAAQ,CAACE,IAAI,GAAG,QAAQ;UACjC;QACF;QAEA,OAAOP,QAAQ;MACjB,CAAC,CAAC,OAAOQ,UAAU,EAAE;QACnBN,OAAO,CAACO,KAAK,CAAC,cAAc,EAAED,UAAU,CAAC;QACzC;QACAN,OAAO,CAACQ,GAAG,CAAC,gBAAgB,EAAEjB,GAAG,CAAC;QAClCS,OAAO,CAACQ,GAAG,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAClB,OAAO,CAAC,CAAC;QAChD,MAAMc,UAAU;MAClB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;AACH,CAAC;AAED,eAAepB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}